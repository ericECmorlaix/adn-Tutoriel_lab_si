{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":"<p>Les ressources documentaires pratiques pour le laboratoire de CIT, SI et NSI.</p>"},{"location":"ressources/","title":"Ressources","text":""},{"location":"ressources/#ressources-generales","title":"Ressources g\u00e9n\u00e9rales :","text":"<ul> <li>Une mine de vid\u00e9os en Fran\u00e7ais par Christian DUCROS <p>Son d\u00e9pot GitHub : https://github.com/christianDUCROS</p> </li> <li>Site de Christophe GUENEAU</li> </ul>"},{"location":"ressources/#pour-nsi","title":"Pour NSI :","text":"<pre><code>- [Du Scratch en Python avec **Pytch**](https://www.pytch.org/app/tutorials/){target=_blank}\n</code></pre>"},{"location":"3D/BlocksCAD/","title":"BlocksCAD :","text":"<p>BlocksCAD permet de g\u00e9n\u00e9rer des mod\u00e8les 3D de pi\u00e8ces avec la programmation graphique par blocs :</p> <p></p>"},{"location":"3D/BlocksCAD/#activite-decouverte","title":"Activit\u00e9 d\u00e9couverte","text":"Le casse t\u00eate du casse t\u00eate : <p>Le probl\u00e8me qu'il nous faut r\u00e9soudre dans cette activit\u00e9, tient au fait que nous ne disposons au laboratoire de SI que d'un exemplaire mat\u00e9riel d'un petit jeu de casse-t\u00eate :</p> <p>    R\u00e8gle n\u00b01 : Un pion ne peut qu\u2019avancer vers un trou libre, jamais reculer.     R\u00e8gle n\u00b02 : Un pion peut sauter par dessus un autre s\u2019ils sont de couleurs oppos\u00e9es  </p> <p>Or un des pions rouges est \u00e9gar\u00e9, nous pourrions alors le reproduire, mais nous sommes nombreux \u00e0 vouloir y jouer au m\u00eame moment, c'est donc plusieurs jeux qu'il nous faut faire...</p>"},{"location":"3D/BlocksCAD/#defin-n1","title":"D\u00e9fin n\u00b01","text":"Mod\u00e9liser un pion avec BlocksCAD <p> Pion orange </p> <p>A l'adresse https://www.blockscad3d.com/editor/. Dans la barre de menu, sous l'icone en forme de \"plan\u00e8te\", choisir la langue : Fran\u00e7ais. Puis cliquer sur le bouton \"Cr\u00e9er un compte\".</p> <p>Cr\u00e9er un compte en utilisant un pseudo \"correct\", le mot de passe de votre choix, et votre adresse mail : prenom.nom@eleves.ecmorlaix.fr</p> <p>  La fen\u00eatre graphique de l'application BlocksCAD s'organise ainsi :</p> <p> <p>Source : Cyril VIGNET</p> </p> <p>Voici une proposition d'\u00e9tapes \u00e0 suivre pour la prise en main de BlocksCAD et la mod\u00e9lisation d'un pion du casse-t\u00eate.     A chaque \u00e9tape, reproduire l'algorithme en glissant les blocs concern\u00e9s depuis le menu vertical des fonctions jusque dans la fen\u00eatre centrale du programme puis, r\u00e9gler le \"Smooth\" sur \"High\" et cliquer sur le bouton \"G\u00e9n\u00e9rer un rendu\".</p> Etape 1 :Etape 2 :Etape 3 :Etape 4 :Etape 5 :Etape 6 : <p> Un premier cylindre (rayon = 7 mm, hauteur = 17 mm) centr\u00e9 ; </p> <p> Un second cylindre (rayon = 4 mm, hauteur = 8 mm) reposant sur le pr\u00e9c\u00e9dent ; </p> <p> Un tore (rayon 1 = 12 mm, rayon 2 = 7 mm) ; </p> <p> Op\u00e9rations d'assemblage et mise en couleur ; </p> <p>Il s'agit maintenant de renommer le projet, par exemple \"monPion-prenom_nom\", afin de l'enregistrer en cliquant sur le bouton \"Sauver\" ;</p> <p>Enfin, il suffit de r\u00e9gler le format de fichier sur \"STL binary\" puis de cliquer sur le bouton \"G\u00e9n\u00e9rer STL\" afin de t\u00e9l\u00e9charger un fichier du mod\u00e8le exploitable pour l'imprimante 3D.</p>"},{"location":"3D/BlocksCAD/#defin-n2","title":"D\u00e9fin n\u00b02","text":"Mod\u00e9liser un support imprimable <p>A l'aide de BlocksCAD, imaginer un mod\u00e8le pour le support des pions. Afin de recevoir les six pions du jeu tout en laissant un emplacement libre, cette pi\u00e8ce doit comporter sept trous cylindriques de diam\u00e8tre 8mm et de profondeur 9mm, distants chacun d'un pas de 17mm.</p> <p> Exemple de support possible </p> <p>Il sera judicieux d'utiliser une boucle de r\u00e9p\u00e9tition. Les autres formes du support sont libres dans la mesure o\u00f9 le mod\u00e8le g\u00e9n\u00e9r\u00e9 reste imprimable avec la printrBot.</p>"},{"location":"3D/BlocksCAD/#applications","title":"Applications","text":""},{"location":"3D/BlocksCAD/#defin-n3","title":"D\u00e9fin n\u00b03","text":"Domino challenge <p>G\u00e9n\u00e9rer le fichier STL d'une pi\u00e8ce aux dimensions exactes des dominos officiels.</p>"},{"location":"3D/BlocksCAD/#defin-n4","title":"D\u00e9fin n\u00b04","text":"Pas si trivial... <p>G\u00e9n\u00e9rer les fichiers STL des 6 portions \"camembert\" du jeu Trivial Poursuit et de leur boite support...</p>"},{"location":"3D/BlocksCAD/#defin-n5","title":"D\u00e9fin n\u00b05","text":"A vous de jouer... <p>Avec l'aide du guide pour BlocksCAD r\u00e9alis\u00e9 par Cyril VIGNET, imaginer et prototyper des pi\u00e8ces pour vos autres projets...</p>"},{"location":"3D/BlocksCAD/#prolongement-autres-ressources","title":"Prolongement : autres ressources...","text":"<ul> <li>Article de Daniel PERS professeur de SI au LP2I</li> </ul>"},{"location":"3D/Onshape/","title":"Onshape","text":"<p>Onshape est une application web qui permet de mod\u00e9liser en 3D \u00e0 la mani\u00e8re de SolidWorks mais dans un navigateur. Elle sera donc disponible sur l\u2019ensemble de vos appareils (ordinateur, tablette, smartphone) tant au lyc\u00e9e qu\u2019en dehors.</p> <p>Pour utiliser Onshape, et b\u00e9n\u00e9ficier gratuitement d\u2019un compte professionnel pour l\u2019\u00e9ducation, il faut s'inscrire...</p> <p>Educator et student ont les m\u00eames possibilit\u00e9s qu\u2019un compte PRO. Pour un compte Education, le logo EDU appara\u00eetra sur tous les documents.</p>"},{"location":"3D/Onshape/#inscription","title":"Inscription","text":"<p>Rendez-vous sur le site https://www.onshape.com/en/education/sign-up et renseigner alors tous les champs des formulaires des fen\u00eatres successives...</p> Etape 1 :Etape 2 :Etape 3 :Etape 4 : <p></p> <p></p> <p></p> <p></p> <p>Ensuite, il faut valider l'inscription depuis le mail re\u00e7u et d\u00e9finir un mot de passe...</p> Etape 5 : <p></p> <p>Une fois le compte activ\u00e9, on est invit\u00e9 \u00e0 configurer certains param\u00e8tres...</p> Etape 6 :Etape 7 :Etape 8 : <p></p> <p></p> <p></p> <p>A partir du menu d\u00e9roulant en haut \u00e0 droite, en cliquant sur \"My account\", on ouvre une fen\u00eatre qui permet de g\u00e9rer toutes les pr\u00e9f\u00e9rences \u00e0 partir du menu list\u00e9 \u00e0 gauche...</p> Etape 9 : <p></p>"},{"location":"3D/Onshape/#prise-en-main","title":"Prise en main","text":"<ul> <li> <p>D\u00e9buter avec Onshape</p> </li> <li> <p>Cr\u00e9er une pi\u00e8ce par extrusion</p> </li> <li> <p>Cr\u00e9er une pi\u00e8ce par r\u00e9volution</p> </li> </ul> <p>Par la suite, pour mod\u00e9liser avec Onshape il suffit de s'identifier \u00e0 l'adresse https://cad.onshape.com/signin</p>"},{"location":"3D/Onshape/#tutoriels","title":"Tutoriels","text":"<p>Des tutoriels pour Onshape sont disponibles sur les sites :</p> <ul> <li>https://sites.google.com/view/newecligne/onshape</li> <li>https://learn.onshape.com/</li> </ul>"},{"location":"3D/Onshape/#ressources","title":"Ressources :","text":"<ul> <li> Une chaine Youtube ;     </li> <li> Un forum </li> <li> Un groupe d'utilisateur francophone\u200b </li> </ul> <ul> <li> <p>eduscol_ressources-pedagogiques_onshape-modeleur-3d</p> </li> <li> <p>cours de mod\u00e9lisation 3D de M. Lossendi\u00e8re\u200b\u200b</p> </li> <li> <p>onshape-un-logiciel-professionnel-de-modelisation-3d-innovant-et-gratuit-pour-un-usage-pedagogique</p> </li> </ul>"},{"location":"DOC/diaporama/","title":"Diaporama","text":"<p>Voici quelques solutions pour produire un diaporama de pr\u00e9sentation</p>"},{"location":"DOC/diaporama/#jupyter-notebook","title":"Jupyter notebook","text":""},{"location":"DOC/diaporama/#interface-dediee-carnets-basthon","title":"Interface d\u00e9di\u00e9e Carnets, Basthon, ...","text":""},{"location":"DOC/diaporama/#visual-studio-code","title":"Visual Studio Code","text":""},{"location":"DOC/diaporama/#prealable","title":"Pr\u00e9alable","text":"<p>La premi\u00e8re chose est de s'assurer que l'extension Jupyter Slide Show est install\u00e9e et activ\u00e9e.</p> <p></p>"},{"location":"DOC/diaporama/#parametrage-des-cellules","title":"Param\u00e9trage des cellules","text":"<p>Pour ajouter un <code>Slide Type</code> (type de diapo) \u00e0 une cellule, \u00e0 partir des trois petits points de son menu, choisir <code>Switch Slide Type</code></p> <p></p> <p></p> <p>Lorsqu'un type de diapo est indiqu\u00e9 dans une cellule, il suffit de cliquer dessus pour le modifier selon le besoin</p> <p></p>"},{"location":"DOC/diaporama/#visualiser-et-exporter-le-diaporama","title":"Visualiser et exporter le diaporama","text":"<p>Dans un terminal, cheminer jusqu'au dossier contenant votre notebook (<code>cd chemin/dossier</code>), puis saisir l'instruction : <code>jupyter nbconvert 'nom_du_notebook.ipynb' --to slides --post serve</code>.</p> <p>Cela d\u00e9marre un serveur et ouvre dans votre navigateur un onglet pour afficher le notebook en mode slide show.</p> <p>En fait, cela g\u00e9n\u00e8re aussi un fichier HTML autonome qu'il est alors possible de publier sur le web par exemple depuis votre d\u00e9pot GitHub nomm\u00e9 <code>username.github.io</code> comme https://ericecmorlaix.github.io/dia/Slide-Le_BN_pour_presenter.html.</p> On peut alors l'int\u00e9grer depuis une cellule de code d'un notebook Code PythonCode alternatifRendu HTML <pre><code>%%HTML\n&lt;center&gt;\n&lt;iframe width=\"560\" height=\"420\" src=\"https://ericecmorlaix.github.io/dia/Slide-Le_BN_pour_presenter.html\" title=\"Exemple de diaporama g\u00e9n\u00e9r\u00e9 depuis un notebook\" &gt;&lt;/iframe&gt;\n&lt;/center&gt;   \n</code></pre> <pre><code>from IPython.display import HTML\nHTML(\"\"\"&lt;center&gt;\n          &lt;iframe width=\"560\" height=\"420\" src=\"https://ericecmorlaix.github.io/dia/Slide-Le_BN_pour_presenter.html\" title=\"Exemple de diaporama g\u00e9n\u00e9r\u00e9 depuis un notebook\" &gt;&lt;/iframe&gt;\n        &lt;/center&gt;\"\"\")\n</code></pre> <p> </p>"},{"location":"DOC/diaporama/#fichier-markdown","title":"Fichier MarkDown","text":""},{"location":"DOC/diaporama/#vscode-markdown-preview-enhanced","title":"VSCode Markdown Preview Enhanced","text":""},{"location":"DOC/diaporama/#vscode-marp","title":"VSCode Marp","text":""},{"location":"DOC/diaporama/#obsidian","title":"Obsidian","text":""},{"location":"DOC/github_pages/","title":"Site Web","text":""},{"location":"DOC/github_pages/#mes-sites-web-sur-github","title":"Mes sites Web sur GitHub","text":"<p>Cette partie pr\u00e9sente une d\u00e9marche qui vous permettra de d\u00e9velopper vos sites web avec l'\u00e9diteur Visual Studio Code de CodeSpaces en ligne et de les h\u00e9berger dans GitHub pour les publier hors de la KhanAcademy...</p>"},{"location":"DOC/github_pages/#creer-un-depot-github","title":"Cr\u00e9er un d\u00e9pot GitHub","text":"<p>Cr\u00e9er un compte sur GitHub (Sign up) depuis un navigateur \u00e0 l'adresse https://github.com/ :</p> <p>Ou identifier vous (Sign in) si vous avez d\u00e9j\u00e0 un compte :</p> <p>A l'adresse https://github.com/new cr\u00e9er un nouveau r\u00e9pertoire de d\u00e9pot nomm\u00e9, par exemple <code>mon_premier_site</code> :</p> <p>Cocher la case \"Initialize this repository with a README\" puis cliquer sur le bouton \"Create repository\".</p> <p>Voil\u00e0, vous faites maintenant parti d'un autre r\u00e9seau social mondial celui des d\u00e9veloppeurs qui partage leur code...</p>"},{"location":"DOC/github_pages/#utiliser-vsc-en-ligne-pour-gerer-votre-depot-github-depuis-codespaces","title":"Utiliser VSC en ligne pour g\u00e9rer votre d\u00e9pot GitHub depuis CodeSpaces","text":""},{"location":"DOC/github_pages/#preparation-de-codespaces","title":"Pr\u00e9paration de CodeSpaces","text":"<p>Pour faire fonctionner l'IDE Visual Studio Code dans un navigateur et ainsi d\u00e9velopper et maintenir des d\u00e9p\u00f4ts GitHub depuis n\u2019importe quelle machine sans installation locale on peut utiliser Codespaces</p> <ol> <li>A la racine de votre d\u00e9pot GitHub cliquer sur le bouton vert <code>&lt;&gt; Code</code> ;</li> <li>Choisir l'onglet <code>Codespaces</code> ;</li> <li>Cliquer sur le bouton vert <code>Create codespace on main</code>...</li> </ol> <p>Tous les dossiers et fichiers de votre d\u00e9pot sont alors \u00e9ditables dans l'environnement de d\u00e9veloppement Visual Studio Code int\u00e9gr\u00e9 \u00e0 CodeSpaces en ligne.</p>"},{"location":"DOC/github_pages/#developpement-dune-page-dans-vsc","title":"D\u00e9veloppement d'une page dans VSC","text":"<ul> <li>Dans la zone de l'explorateur (bleu), cr\u00e9er un nouveau fichier (jaune 1) nomm\u00e9 <code>index.html</code> ;</li> <li> <p>Dans la zone d'\u00e9dition du fichier, saisir un <code>!</code> et valider la proposition \"Emmet Abbreviation\" de VSC : <code><pre>\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;      \n&lt;/body&gt;\n&lt;/html&gt;\n</pre> <li> <p>Dans le code ainsi obtenu, remplacer <code>\"en\"</code> par <code>\"fr\"</code> et donner un titre \u00e0 la page d'accueil de votre futur site ;</p> </li> <li>Compl\u00e9ter le <code>body</code> avec les balises de contenu que vous souhaitez voir s'afficher sur cette page ;</li> <li>Dans un terminal, saisir <code>python -m http.server</code>, puis cliquer sur le bouton <code>Open Browser</code> (ou sur port pour afficher votre page dans un nouvel onglet de votre navigateur) ;</li> <li>Compl\u00e9ter le code HTML de votre page et v\u00e9rifier le r\u00e9sultat obtenu en rafraichissant r\u00e9guli\u00e8rement l'affichage de cet onglet du navigateur ;</li>"},{"location":"DOC/github_pages/#publier-votre-site-sur-github","title":"Publier votre site sur GitHub","text":"<ul> <li>Dans la zone Source Control (bleu), cliquer sur le <code>+</code> (jaune) pour ajouter les fichiers modifi\u00e9s \u00e0 mettre en attente (\u00e0 indexer) \u00e0 ce stade du d\u00e9veloppement, ajouter un message (rose) avant de commiter (orange), puis synchroniser vos modifications ;</li> </ul> <ul> <li>Param\u00e9trer GitHub pour qu'il affiche votre site Web : dans <code>Settings</code>, choisir <code>Pages</code> puis s\u00e9lectionner la branche <code>main</code> et cliquer sur le bouton <code>Save</code> :</li> </ul> <ul> <li>Enfin, apr\u00e8s quelques minutes, dans un navigateur, rendez vous \u00e0 une adresse telle que https://username.github.io/nom-de-votre-site/...</li> </ul>"},{"location":"DOC/github_pages/#la-routine-pour-maintenir-votre-site-git-avec-un-editeur-vsc-en-ligne-se-resume-a","title":"La routine pour maintenir votre site Git avec un \u00e9diteur VSC en ligne se r\u00e9sume \u00e0 :","text":"I - Modifier vos fichiers sur la machine virtuelle distante : <p> Depuis l'Explorateur (<code>Explorer</code> Ctrl\uff0bMaj\uff0bE) de VSC (bleu) :</p> <ul> <li>cliquer sur un dossier pour afficher la liste de son contenu ;</li> <li>cliquer sur les ic\u00f4nes (jaunes) pour cr\u00e9er un nouveau fichier (1) et/ou un nouveau dossier (2) ;</li> <li>maintenir le clic (= clic droit) sur un fichier (ou un dossier) pour renommer son chemin et ainsi le d\u00e9placer dans l'arborescence ;</li> <li>cliquer sur un fichier pour l'ouvrir dans l'\u00e9diteur afin de le modifier ;</li> <li>maintenir le clic (= clic droit) sur un fichier <code>.md</code> et choisir <code>Open preview</code> pour le pr\u00e9visualiser ;</li> <li>d\u00e9marrer un serveur <code>python -m http.server</code> depuis un terminal pour visualiser un fichier <code>.html</code></li> </ul> II - Indexer vos changements : <p>Depuis le \"Contr\u00f4le de code source\" (bleu) (<code>Source Control</code> Ctrl\uff0bMaj\uff0bG),  dans \"Changements\" (<code>Changes</code>) cliquer sur le <code>+</code> (jaune) pour ajouter les fichiers modifi\u00e9s   \u00e0 mettre en attente (indexer) dans cette phase (stage) de d\u00e9veloppement ;</p> III - Committer, valider vos modifications : <p>Ajouter un message sous \"CONTR\u00d4LE DE CODE SOURCE\" (<code>SOURCE CONTROL</code>) (rose)  pour d\u00e9finir ces modifications \u00e0 ce stade de votre d\u00e9veloppement,   puis cliquer sur <code>\u2713</code> (orange) pour valider ce commit ;</p> IV - Pousser les modifications vers votre d\u00e9p\u00f4t distant : <p>Cliquer sur les <code>...</code> en face de <code>CONTR\u00d4LE DE CODE SOURCE</code> et choisir <code>Push</code> ;</p>"},{"location":"EP/","title":"Index","text":"<p>Sujets Banque Sciences de l'ing\u00e9nieur - Pratique</p> <p>Drive de Baptiste Louvion avec tableau d'inventaire</p> n\u00b0 syst\u00e8me sujet performance SW-M3D Scilab-Xcos Open Modelica Commentaire Faisabilit\u00e9 2 MetaBird A fr\u00e9quence battement d'ailes OK TODO adptation minime ressource T\u00e9l\u00e9phone \u00e0 tester et bo\u00eete \u00e0 cr\u00e9er ~ B amplitude battement d'ailes OK TODO adptation minime ressource T\u00e9l\u00e9phone \u00e0 tester ~ C autonomie \u00e9nerg\u00e9tique TODO Mod\u00e8le Matlab \u00e0 adapter ? Maquette et multim\u00e8tre \u00e0 tester 5 Distributeur de savon  No Touch A quantit\u00e9 de savon OK sur V5.5.2 Protocole \u00e0 tester ~ B autonomie \u00e9nerg\u00e9tique OK avec modifications Protocole \u00e0 tester ~ 6 Tensiom\u00e8tre - Spengler Auto Tensio A d\u00e9bit d\u2019air OK sur V5.5.2 Protocole \u00e0 tester ~ B autonomie \u00e9nerg\u00e9tique PB de compatibilit\u00e9, mod\u00e8le de \"ouf\" avec arduino... C temps de cycle de mesure PB de compatibilit\u00e9, mod\u00e8le de \"ouf\" avec arduino... 30 Slider CREA A vitesse rapide OK sur V5.5.2 Multim\u00e8tre (Umot) et Maquette \u00e0 tester ~ B vitesse pr\u00e9cision OK sur V5.5.2 Maquette \u00e0 tester ~ C vitesse lente OK sur V5.5.2 Maquette \u00e0 tester ~"},{"location":"EP/#notes","title":"Notes :","text":""},{"location":"EP/#05b","title":"05B","text":"<p>Le mod\u00e8le Open Modelica fourni dans la banque ne correspond pas exactement avec  celui affich\u00e9 dans le document ressource il manque le calcul du courant moyen et il y a la mod\u00e9lisation du piston en plus. Aussi, j'ai du remplacer le bloc emf non reconnu. Mon temps de cycle simul\u00e9 est de 2,709s, il faut donc r\u00e9gler le temps de simulation sur 3s pour l'atteindre et adapter la valeur de la constante pour le calcul du courant moyen (k=2,709) on trouve Imoy=0,52A</p> <p></p>"},{"location":"IDE/notebook/","title":"Les notebook jupyter","text":""},{"location":"IDE/notebook/#kezako","title":"K\u00e9zako","text":"<p>Un notebook jupyter permet de rapidement publier un compte rendu scientifique multim\u00e9dia sur le Web.</p> <p></p>"},{"location":"IDE/notebook/#exemples","title":"Exemples","text":"<p>Voici ci dessous quelques exemples \u00e0 t\u00e9l\u00e9charger pour y explorer certaines fonctionnalit\u00e9s :</p> <ul> <li>D\u00e9couverte</li> <li>Markdown</li> <li>HTML</li> <li>LaTeX</li> <li>Calcul</li> <li>Diaporama</li> <li>Affichage</li> </ul>"},{"location":"IDE/outils/","title":"Outils","text":""},{"location":"IDE/outils/#dessin-schema-tableau-blanc","title":"Dessin, Sch\u00e9ma, Tableau blanc","text":""},{"location":"IDE/outils/#tldraw","title":"; tldraw","text":"<ul> <li>application web</li> <li>documentation</li> <li>extension VSCode</li> </ul> <p>Dans le genre et avec des fonctions de dessin/sch\u00e9ma plus compl\u00e8te, il y a : -   https://plus.excalidraw.com/ : l\u2019\u00e9diteur en ligne https://excalidraw.com/ et l\u2019extension VSCode https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor -   https://drawio-app.com/ : l\u2019\u00e9diteur en ligne  https://app.diagrams.net/ et l\u2019extension VSCode https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio ; \uf0d8   Il y a \u00e9galement ces extensions pour Obsidian\u2026</p> <p>Dans https://portail.apps.education.fr/services je n\u2019ai pas vu d\u2019\u00e9quivalent \u00ab Padlet \u00bb pour faire un travail collaboratif type tableau blanc. En revanche il y a CodiMD qui permet de faire du MarkDown collaboratif en ligne : https://portail.apps.education.fr/services/pad-avance-codimd et de partager des fichier en MarkDown avec les \u00e9l\u00e8ves\u2026</p>"},{"location":"IDE/GitHub/","title":"Mon classeur sur GitHub","text":""},{"location":"IDE/GitHub/#creer-un-depot-github","title":"Cr\u00e9er un d\u00e9pot GitHub","text":"<p>Cr\u00e9er un compte sur GitHub (Sign up) depuis un navigateur \u00e0 l'adresse https://github.com/ :</p> <p>Ou identifier vous (Sign in) si vous avez d\u00e9j\u00e0 un compte :</p> <p>A l'adresse https://github.com/new cr\u00e9er un nouveau r\u00e9pertoire de d\u00e9pot nomm\u00e9, par exemple <code>mon_classeur</code> :</p> <p>Cocher la case \"Initialize this repository with a README\" puis cliquer sur le bouton \"Create repository\".</p> <p>Voil\u00e0, vous faites maintenant parti d'un autre r\u00e9seau social mondial celui des d\u00e9veloppeurs de code...</p>"},{"location":"IDE/GitHub/#utiliser-linterface-web-de-github-pour-gerer-votre-depot","title":"Utiliser l'interface web de GitHub pour g\u00e9rer votre d\u00e9pot","text":""},{"location":"IDE/GitHub/#modifier-le-fichier-readmemd","title":"Modifier le fichier <code>README.md</code>","text":"<p>Le fichier <code>README</code> a pour extension <code>.md</code> pour MarkDown, c'est ce langage de description rudimentaire que nous utiliserons principalement pour r\u00e9diger nos pages web sur GitHub.</p> <p>Il existe plusieurs versions de ce langage qui, \u00e0 partir d'une syntaxe de base commune, poss\u00e8dent d'autres \u00e9l\u00e9ments additionnels sp\u00e9cifiques...</p> <p>Cliquer sur le crayon pour ouvrir le fichier <code>README.md</code>dans l'\u00e9diteur en ligne :</p> <p>Modifier son contenu en utilisant la syntaxe MarkDown \u00e0 la sauce GitHub :</p> <p>L'onglet <code>Preview</code> permet de visualiser le r\u00e9sultat avant sa publication...</p> Code exemple \u00e0 copier/coller <pre><code>## Voici un titre de niveau 2\n### Et voici un titre de niveau 3\nCeci est un paragraphe.\nCette ligne s'affiche dans le m\u00eame paragraphe \u00e0 la suite de la premi\u00e8re phrase sans retour \u00e0 la ligne.  \nCette ligne s'affiche dans le m\u00eame paragraphe avec un retour \u00e0 la ligne\ncar on a laiss\u00e9 deux caract\u00e8res espaces apr\u00e8s le point de la phrase pr\u00e9c\u00e9dente.\n\nCette ligne s'affiche dans un nouveau paragraphe\ncar on a laiss\u00e9 deux sauts de ligne apr\u00e8s le point de la phrase pr\u00e9c\u00e9dente.\n\nOn peut obtenir du _texte_ avec *simple emphase* rendu en *italique*,\ndu __texte__ avec **forte emphase** rendu en **Gras**,\ndu **_Texte_** \u00e0 la fois en **gras** et en *italique*,\ndu `code source` rendu en caract\u00e8res `monospaces`,\n    du ~~texte barr\u00e9~~  rendu avec une ligne en travers du texte.\n\n## Un lien :\nCe document est r\u00e9dig\u00e9 en [MarkDown](https://fr.wikipedia.org/wiki/Markdown).\n\n## Une image :\n![illustration GitHub Docs](https://ericecmorlaix.github.io/img/GitHub00c.png)\n\n## Une liste :\n- Toto ;\n- Titi ;\n- Tata...\n\n## Un avertissement :\n&gt; Libre \u00e0 vous de personaliser cette page \u00e0 l'aide de la documentation\n&gt;  du [MarkDown \u00e0 la sauce GitHub](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)...\n</code></pre> <p>Publier la nouvelle version du fichier <code>README.md</code> en d\u00e9crivant vos modifications dans un message et puis en cliquant sur le bouton <code>Commit changes</code> :</p> <p>Waouh ! vous venez de faire votre premier Commit !</p>"},{"location":"IDE/GitHub/#creer-de-nouveaux-dossier-et-fichier","title":"Cr\u00e9er de nouveaux dossier et fichier","text":"<p>Cliquer sur le bouton <code>Add file</code> depuis l'interface de votre d\u00e9pot GitHub et choisir <code>Create new files</code> :</p> <p>Dans l'\u00e9diteur qui s'ouvre, saisir le nom du fichier avec son extension et son chemin dans l'arborescence, par exemple <code>docs/index.md</code> :</p>          Comment \u00e9diter une arborescence de dossiers sur GitHub ?              <p>Faire un nouveau Commit avec le message : <code>ajout fichier index.md dans dossier docs</code></p>"},{"location":"IDE/GitHub/#televerser-des-dossiers-et-fichiers","title":"T\u00e9l\u00e9verser des dossiers et fichiers","text":"<p>Depuis le dossier <code>docs</code>, Cliquer sur le bouton <code>Add file</code> depuis l'interface de votre d\u00e9pot GitHub et choisir <code>Upload files</code> :</p> <p>Partager votre \u00e9cran pour Glisser/D\u00e9poser vos dossiers et/ou vos fichiers</p> Exemple \u00e0 faire vous m\u00eame : <ul> <li>glisser/d\u00e9poser un fichier image dans le dossier <code>docs</code> ;</li> <li>Committer ;</li> <li>Editer le fichier <code>index.md</code> en y ajoutant l'instruction MarkDown <code>![image de ...?](nom_du_fichier_image.png)</code> ;</li> <li>Pr\u00e9visualiser pour v\u00e9rifier le bon affichage de l'image ;</li> <li>Committer ;</li> </ul>"},{"location":"IDE/GitHub/#utiliser-vsc-en-ligne-pour-gerer-votre-depot-github","title":"Utiliser VSC en ligne pour g\u00e9rer votre d\u00e9pot GitHub","text":"<p>Pour \u00e9diter facilement vos fichiers avec l'IDE Visual Studio Code dans un navigateur et ainsi d\u00e9velopper et maintenir des d\u00e9p\u00f4ts GitHub depuis n\u2019importe quelle machine sans installation locale plusieures solutions s'offrent \u00e0 nous :</p> Une version all\u00e9g\u00e9e de VS Code s'ex\u00e9cutant enti\u00e8rement dans votre navigateur <p>Une fois toutes les fonctionnalit\u00e9s de sa page web charg\u00e9e, l'outil de d\u00e9veloppement peut fonctionner enti\u00e8rement sans serveur dans le navigateur mais le terminal et le d\u00e9bogueur ne seront pas disponibles. Donc, par exemple :</p> <ul> <li>Pour ex\u00e9cuter le code d'une cellule python d'un notebook il faut recourir \u00e0 l'extension vscode-pyodide...  </li> <li>Il n'est pas possible de pr\u00e9visualiser en local le rendu d'un site avec la commande <code>mkdocs serve</code>...</li> </ul> vscode.devgithub.dev <ul> <li>Depuis l\u2019affichage d\u2019un d\u00e9p\u00f4t GitHub dans un navigateur, il suffit d\u2019ins\u00e9rer <code>vscode.dev/</code> devant l\u2019URL pour ouvrir ce d\u00e9p\u00f4t dans l\u2019interface VSCode pour le web...</li> <li>OU depuis l'adresse https://vscode.dev/ cliquer sur le bouton <code>Ouvrir un r\u00e9f\u00e9rentiel distant</code> et suivre les instructions...</li> </ul> <ul> <li>Depuis l\u2019affichage d\u2019un d\u00e9p\u00f4t GitHub dans un navigateur, il suffit :<ul> <li>d\u2019enfoncer les touches d'un clavier Maj\uff0b. ;</li> <li>ou de changer le <code>github.com</code> en <code>github.dev</code> dans l\u2019URL pour ouvrir ce d\u00e9p\u00f4t dans l\u2019interface VSCode pour le web...</li> </ul> </li> </ul> <p></p> <ul> <li>OU depuis l'adresse https://github.dev/ cliquer sur le bouton <code>GitHub</code> en bas \u00e0 gauche et choisir <code>Ouvrir le d\u00e9p\u00f4t/r\u00e9f\u00e9rentiel distant</code> et suivre les instructions...</li> </ul> Piloter un serveur distant depuis votre navigateur pour y ex\u00e9cuter VS Code <p>Solution plus \u00e9nergivore car fonctionnant dans le cloud mais plus puissante et compl\u00e8te...</p> CodespacesGitpod <ul> <li>A la racine de votre d\u00e9pot GitHub cliquer sur le bouton vert <code>&lt;&gt; Code</code> puis choisir l'onglet <code>Codespaces</code> et enfin cliquer sur le bouton vert <code>Create codespace on main</code> </li> </ul> <p> </p> <ul> <li>Sur le site Gitpod, signer avec votre compte GitHub ;</li> <li>Choisir VS Code BROWSER ;</li> <li>Cliquer sur <code>New Workspace</code> ;</li> <li>Rechercher puis choisir votre d\u00e9pot dans la liste...</li> </ul> <p>Tous les dossiers et fichiers de votre d\u00e9pot sont alors \u00e9ditables dans l'environnement de d\u00e9veloppement int\u00e9gr\u00e9 Visual Studio Code en ligne.</p>"},{"location":"IDE/GitHub/#la-routine-pour-maintenir-votre-site-git-avec-un-editeur-vsc-en-ligne-se-resume-a","title":"La routine pour maintenir votre site Git avec un \u00e9diteur VSC en ligne se r\u00e9sume \u00e0 :","text":"I - Modifier vos fichiers sur la machine virtuelle distante : <p>Depuis l'Explorateur (<code>Explorer</code> Ctrl\uff0bMaj\uff0bE) de VSC (bleu) :</p> <ul> <li>cliquer sur un dossier pour afficher la liste de son contenu ;</li> <li>cliquer sur les ic\u00f4nes (jaunes) pour cr\u00e9er un nouveau fichier et/ou un nouveau dossier ;</li> <li>maintenir le clic sur un fichier (ou un dossier) pour le d\u00e9placer dans l'arborescence ;</li> <li>cliquer sur un fichier pour l'ouvrir dans l'\u00e9diteur afin de le modifier ;</li> <li>cliquer droit sur un fichier <code>.md</code> et choisir <code>Open preview</code> pour le pr\u00e9visualiser ;</li> </ul> II - Indexer vos changements : <p>Depuis le \"Contr\u00f4le de code source\" (vert) (<code>Source Control</code> Ctrl\uff0bMaj\uff0bG),  dans \"Changements\" (<code>Changes</code>) cliquer sur le <code>+</code> (orange) pour ajouter les fichiers modifi\u00e9s   \u00e0 mettre en attente (indexer) dans cette phase (stage) de d\u00e9veloppement ;</p> III - Committer, valider vos modifications : <p>Ajouter un message sous \"CONTR\u00d4LE DE CODE SOURCE\" (<code>SOURCE CONTROL</code>) (rose)  pour d\u00e9finir ces modifications \u00e0 ce stade de votre d\u00e9veloppement,   puis cliquer sur <code>\u2713</code> (violet) pour valider ce commit ;</p> IV - Pousser les modifications vers votre d\u00e9p\u00f4t distant : <p>Cliquer sur les <code>...</code> en face de <code>CONTR\u00d4LE DE CODE SOURCE</code> et choisir <code>Push</code> ;</p> Exemple \u00e0 faire vous m\u00eame : <ul> <li>cliquer sur l'icone <code>New Folder</code> (jaune) pour cr\u00e9er un nouveau dossier nomm\u00e9 <code>images</code> ;</li> <li>d\u00e9placer votre fichier image dans le dossier <code>images</code> ;</li> <li>cliquer sur le fichier <code>index.md</code> pour l'ouvrir dans l'\u00e9diteur ;</li> <li>cliquer  droit le fichier <code>index.md</code>et choisir <code>Open preview</code> pour le pr\u00e9visualiser ;</li> <li>glisser l'onglet de la fen\u00eatre de pr\u00e9visualisation sur le cot\u00e9 droit ;</li> <li>modifier le chemin relatif vers l'image dans l'instruction MarkDown <code>![image de ...?](images/nom_du_fichier_image.png)</code> ; </li> <li>pr\u00e9visualiser pour v\u00e9rifier le bon affichage de l'image ;</li> <li>indexer, Commiter puis Pousser vos modifications ;</li> <li>v\u00e9rifier la mis \u00e0 jour de votre d\u00e9p\u00f4t ;</li> </ul>"},{"location":"IDE/VSCode/","title":"Visual Studio Code","text":""},{"location":"IDE/VSCode/#extensions-pour-vscode","title":"Extensions pour VSCode","text":""},{"location":"IDE/VSCode/#a-installer","title":"A installer","text":"<ul> <li>French Language Pack for Visual Studio Code ;</li> <li>Jupyter ;</li> <li>Python ; <p>Ou vscode-pyodide l'alternative pour programmer en Python dans un navigateur avec Visual Studio Code pour le Web ;</p> </li> <li>GitHub Codespaces ;</li> </ul>"},{"location":"IDE/VSCode/#a-experimenter","title":"A exp\u00e9rimenter","text":"<ul> <li>Luna Paint <p>Limitation observ\u00e9e : l'enregistrement des modifications apport\u00e9s au fichier image ne fonctionne que depuis l'application VSCode sur PC pour un dossier local ou distant (codespace) mais pas dans un navigateur pour GitHub.dev ni VSCode.dev...</p> </li> <li>[v] MPE</li> <li>Wikilens</li> <li>CodeSwing</li> <li>Code Tour</li> <li>VSCode Pyodide</li> <li> <p>tldraw</p> </li> <li> <p>LiveServer web statique et dynamique</p> </li> </ul>"},{"location":"IDE/VSCode/#notebooks-jupyter-dans-vscode","title":"Notebooks Jupyter dans VSCode","text":""},{"location":"IDE/VSCode/#laide-officielle","title":"L'aide officielle","text":"<p>Jupyter Notebooks in VS Code ;</p>"},{"location":"IDE/VSCode/#extraits-utiles","title":"Extraits utiles","text":""},{"location":"IDE/VSCode/#diaporama","title":"Diaporama","text":""},{"location":"IHM/","title":"Index","text":"<p>Applications du cloud :</p> <ul> <li>www.meross.com<ul> <li>Multiprises</li> <li>App</li> <li>GitHub meross-mkr1010</li> </ul> </li> <li>Appli My Chacon</li> </ul>"},{"location":"IHM/Home_Assistant_OS/","title":"Home Assistant OS","text":"<p>Home Assistant est un logiciel libre gratuit op\u00e9rant comme un serveur central dans une installation domotique afin de contr\u00f4ler divers appareils \u00e9lectriques, relever des grandeurs physiques ou des consommations \u00e9lectriques. Il s'installe sous le syst\u00e8me d'exploitation Linux et peut fonctionner sur des ordinateurs \u00e0 faible capacit\u00e9 de calculs comme le Rasperry Pi.</p> <ul> <li>Home-assistant_Site</li> <li>Home-assistant_Documentation</li> <li>Home-assistant_GitHub</li> <li></li> </ul>"},{"location":"IHM/MIT_App_Inventor/","title":"MIT App Inventor","text":"<p>App Inventor pour Android est une application initialement fournie par Google et maintenant g\u00e9r\u00e9e par le MIT, Massachusetts Institute of Technology. Il permet \u00e0 toute personne, y compris aux personnes peu familiaris\u00e9es avec la programmation informatique, de cr\u00e9er des applications logicielles pour le syst\u00e8me d'exploitation Android. Il utilise une interface graphique, tr\u00e8s similaire \u00e0 Scratch. </p>"},{"location":"IHM/MIT_App_Inventor/#mit-app-inventor-sans-compte-gmail","title":"MIT App Inventor sans compte Gmail  :","text":"<ul> <li>Se connecter en utilisant le lien https://code.appinventor.mit.edu/login/?locale=fr_FR<ul> <li>Cliquer sur le bouton <code>Continue Without An Account</code> ;</li> <li>Bien noter le code \u00e0 quatre mots qui est g\u00e9n\u00e9r\u00e9, c'est celui qui vous permettra de retrouver votre travail lorsque vous revisiterez ce site ;</li> <li>Cliquer sur le bouton <code>Continue</code> ;</li> <li>Cocher la case <code>Do Not Show Again</code> puis Cliquer sur le bouton <code>Continue</code> ;</li> <li>Cliquer sur le bouton <code>Close</code> ; <p>Vous \u00eates alors connect\u00e9 en tant qu'anonyme...</p> </li> </ul> </li> <li>Se d\u00e9connecter (C'est imp\u00e9ratif pour prot\u00e9ger votre travail)<ul> <li>Cliquer sur le bouton du menu horizontal en haut tout \u00e0 droite <code>anon-#############</code> ;</li> <li>Choisir <code>Sign out</code> ; <p>== /! ne pas choisir <code>Delete Account</code>, vous perdriez tout votre travail !!!==</p> </li> </ul> </li> </ul>"},{"location":"IHM/MIT_App_Inventor/#connecter-votre-ipad","title":"Connecter votre iPad :","text":"<p>Cela permet de tester votre application en direct sur l'iPad lors de son d\u00e9veloppement. Mais il ne sera pas possible de l'installer sur IOS, pour encore, et il faudra utiliser un appareil Andro\u00efd pour cela...</p> <ul> <li>Depuis la biblioth\u00e8que <code>El\u00e8ves</code> installer l'application <code>MIT App Inventor</code> ;</li> <li>Connecter sur le m\u00eame r\u00e9seau LAN votre PC (Ethernet) et votre iPad (Wifi) ;</li> <li>Sur le PC dans le menu de MIT App Inventor, cr\u00e9er un nouveau projet ou ouvrir un projet existant puis cliquer sur <code>Connecte</code> et choisir <code>Compagnon AI</code>;</li> </ul> <p></p> <ul> <li>Sur votre iPad depuis l'application Mit App Inventor, scanner le  QR code ou saisir le code \u00e0 6 caract\u00e8res ;</li> </ul> <p>Source : https://appinventor.mit.edu/explore/ai2/setup-device-wifi.html</p> Tout faire directement sur l'iPad <p> </p>"},{"location":"IHM/MIT_App_Inventor/#une-premiere-application","title":"Une premi\u00e8re application","text":"<ul> <li> <p>https://appinventor.mit.edu/explore/ai2/hellopurr</p> </li> <li> <p>https://fr.vittascience.com/learn/tutorial.php?id=58/Construire-votre-premi%C3%A8re-application-%22Bonjour-Vittascience-!%22</p> </li> </ul> HOUR OF CODE : Talk to me <p> </p> TIC TAC TOE <p> </p> LIVE LOCATION TRACKER <p> </p> <p>A tester :</p> <ul> <li>https://iot.appinventor.mit.edu/assets/howtos/MIT_App_Inventor_Microbit_LED.pdf</li> <li>https://www.youtube.com/watch?v=RNtjyCC1En4</li> <li> <p>https://perennesphilippe.pagesperso-orange.fr/Files/Other/dossier%20systeme%20embarque%20ou%20connecte.pdf</p> </li> <li> <p>https://community.appinventor.mit.edu/t/esp32-wifi-webserver-led-on-off-static-ip-soft-access-point/9323/3</p> </li> <li>https://www.youtube.com/watch?v=RG0ZYlRdnLw</li> <li> <p>https://www.youtube.com/watch?v=pAsQ8zZCcHo</p> </li> <li> <p>https://pedagogie.ac-toulouse.fr/sii/sites/sii.disciplines.ac-toulouse.fr/files/ressources/didacticiels/programmation/objets-connectes/app-inventor/15-appinventor-appafficher_serveur.pdf</p> </li> <li> <p>https://onvaessayer.org/vaucanson/41-appinventorIntro/1-PresAppInventor.php</p> </li> <li>http://kio4.com/appinventorf/index.htm</li> <li>Andro\u00efd ? BBC : https://tribu.phm.education.gouv.fr/toutatice-portail-cms-nuxeo/binary/Connexion+avec+MicroBit.pdf?type=FILE&amp;path=%2Fdefault-domain%2Fworkspaces%2Fressources-snt-jbs%2Fdocuments%2F8-les-objets-connectes%2F3-activites-branchees%2F3-developpes-ton-ihm%2Fconnexion-avec-microbit.1585846146003&amp;portalName=foad&amp;liveState=true&amp;fieldName=file:content&amp;t=1590016418</li> <li>Andro\u00efd ? BBC + HC05 https://fr.vittascience.com/learn/tutorial.php?id=59/compteur-de-pas-bluetooth-avec-micro:bit</li> <li>Andro\u00efd ? Arduino + HC05 https://www.youtube.com/watch?v=aQcJ4uHdQEA</li> <li>Andro\u00efd ? BBC V2 : https://appinventor.mit.edu/explore/ai2/IoT_unit</li> </ul> <p>Alternatives : https://fr.altapps.net/soft/app-inventor-for-android?platform=iphone</p>"},{"location":"IHM/ThingSpeak/","title":"ThingSpeak","text":""},{"location":"IHM/ThingSpeak/#principe","title":"Principe","text":""},{"location":"IHM/ThingSpeak/#prise-en-main","title":"Prise en main","text":"<p> <p></p>"},{"location":"IHM/ThingSpeak/#exemples","title":"Exemples","text":""},{"location":"IHM/ThingSpeak/#raspberry-pi","title":"Raspberry PI","text":"<ul> <li>https://raspberrypi-tutorials.fr/enregistrer-les-donnees-des-capteurs-raspberry-pi-avec-thingspeak-et-les-analyser/</li> <li>https://iotdesignpro.com/projects/how-to-send-data-to-thingspeak-cloud-using-raspberry-pi</li> </ul>"},{"location":"IHM/ThingSpeak/#bbc-microbit-esp8266","title":"BBC micro:bit + ESP8266","text":"<ul> <li>https://www.robotique.tech/robotics/send-data-temperature-and-humidity-to-the-thingspeak-site-with-microbit/</li> <li>https://www.elecfreaks.com/blog/post/how-to-send-microbit-data-to-iot-platform.html</li> </ul>"},{"location":"IOT/BBC_microbit/","title":"Programmation BBC micro:bit","text":""},{"location":"IOT/BBC_microbit/#mise-en-situation","title":"Mise en situation","text":"<p>BBC micro:bit est un mini-ordinateur programmable de poche (une carte \u00e0 microcontr\u00f4leur) con\u00e7u pour d\u00e9velopper votre cr\u00e9ativit\u00e9 avec la technologie.</p> Kesako ? ... <p></p> <p>Ce petit appareil int\u00e8gre beaucoup de fonctionnalit\u00e9s : il a 25 LED rouges qui peuvent afficher des messages, et deux boutons programmables pouvant \u00eatre utilis\u00e9s pour contr\u00f4ler des jeux, ou, par exemple, faire une pause et sauter des chansons sur une liste de lecture ;</p> <p>Le BBC micro:bit peut d\u00e9tecter le mouvement, la temp\u00e9rature, la  luminosit\u00e9, et vous dire dans quelle direction vous vous dirigez ;</p> <p>Il peut aussi utiliser une connexion Bluetooth \u00e0 faible \u00e9nergie pour interagir avec d'autres appareils et Internet.</p> <p></p> <p> Ce petit ordinateur poss\u00e8de la derni\u00e8re technologie qui \u00e9quipe les appareils modernes : t\u00e9l\u00e9phones mobiles, r\u00e9frig\u00e9rateurs, montres intelligentes, alarmes antivol, robots, etc...</p> <p>Ainsi, il s'apparente \u00e0 ce que l'on nomme l'Internet des objets : Internet of Things, abr\u00e9g\u00e9 IoT.</p> <p>Gr\u00e2ce \u00e0 la connexion \u00e0 l'IoT, nous pouvons interagir avec un large \u00e9ventail de capteurs \u00e0 travers le monde entier en temps r\u00e9el et nous pouvons maintenant prendre des d\u00e9cisions intelligentes en utilisant nos appareils.</p> <p></p> <p>Un micro:bit est \u00e0 la fois autonome et extensible. En plus d'utiliser ses LED int\u00e9gr\u00e9es, boutons et capteurs, nous pouvons \u00e9largir sa gamme de fonctions en l'ins\u00e9rant dans un connecteur comme ci-contre.</p> <p>Donc finalement, micro:bit est tout ce que vous pouvez imaginer. Vous pouvez le transformer en votre dispositif de messagerie, console de jeu, v\u00eatement intelligent, alarme antivol, contr\u00f4leur de maison intelligente... A peu pr\u00e8s tout ce que votre imagination peut cr\u00e9er en utilisant des capteurs suppl\u00e9mentaires, en r\u00e9alisant un boitier ou un support pour la carte, et en programmant son microcontroleur.</p> Historique ... <p>La BBC a initi\u00e9 en 2015 le projet Micro:bit, qui se veut \u00eatre un nano-ordinateur \u00e0 carte unique \u00e0 processeur ARM destin\u00e9 \u00e0 l\u2019\u00e9ducation. L\u2019objectif de cette derni\u00e8re : fournir \u00e0 chaque \u00e9colier de 12 ans (\u00ab year 7 \u00bb) un support amusant et facile \u00e0 utiliser.</p> <p>Au d\u00e9but des ann\u00e9es 80, le groupe de cha\u00eenes publiques au Royaume-Uni, la \u00ab British Broadcasting Corporation \u00bb, dite BBC, lan\u00e7a un appel \u00e0 projet pour cr\u00e9er un ordinateur \u00e9ducatif \u00e0 destination des \u00e9coliers et des \u00e9coles. Une jeune entreprise de Cambridge \u00ab Acorn \u00bb (\u00ab gland \u00bb en anglais) fut retenue pour cr\u00e9er cette plateforme. Le \u00ab BBC Micro \u00bb \u00e9tait n\u00e9.</p> <p> BBC Micro Model A/B (standard configuration) </p> <p>Dans la m\u00eame p\u00e9riode, ici en France, nous avons connu une initiative comparable avec le Plan Informatique pour Tous bas\u00e9 sur des micro-ordinateurs Thomson MO5 et TO7.</p> <p>Plus r\u00e9cemment, quand les membres fondateurs du Raspberry Pi commenc\u00e8rent \u00e0 concr\u00e9tiser leurs r\u00eaves d\u2019un nano-ordinateur \u00e9ducatif, ils voulurent y inscrire en guise de clin d\u2019\u0153il le label \u00ab BBC \u00bb. Ce droit ne leur fut pas octroy\u00e9 ; n\u00e9anmoins un journaliste high-tech de la c\u00e9l\u00e8bre \u00ab Corporation \u00bb sur son blog et sur la cha\u00eene YouTube leur donna un coup de projecteur qui lancera le mouvement autour du Raspberry Pi.</p> <p> Le Nouveau Raspberry Pi 400 : un mini-ordinateur dans un clavier ! </p> <p>L'id\u00e9e du Raspberry Pi 400 d'inclure un ordinateur complet dans un clavier s'inspire donc des  machines des ann\u00e9es 80 telles que ce BBC micro :</p> <p>L\u2019histoire se r\u00e9p\u00e8te donc trente ans plus tard, la BBC s\u2019est \u00ab remis dans le bain \u00bb en lan\u00e7ant un objectif tr\u00e8s ambitieux : envisager un \u00ab ordinateur de poche programmable permettant aux enfants d\u2019explorer la cr\u00e9ativit\u00e9 technologique \u00bb.</p> <p></p> <p>Elle voulait formuler une r\u00e9ponse \u00e0 la fracture num\u00e9rique et aux lacunes per\u00e7ues des comp\u00e9tences informatiques des citoyens. Dans l\u2019environnement fertile des startups technologiques du Royaume Uni et inspir\u00e9 par l\u2019\u00e9nergie des \u00ab makers \u00bb et \u00ab programmeurs \u00bb autour des cartes \u00ab hackables \u00bb comme l\u2019Arduino, le Raspberry Pi, Beaglebone et bien d\u2019autres, la BBC a de nouveau mont\u00e9 une initiative d\u2019\u00e9ducation num\u00e9rique dans la continuit\u00e9 du projet \u00ab Make It Digital \u00bb (cr\u00e9er le num\u00e9rique). Ils ont su rapidement rassembler une trentaine de partenaires et des industriels.</p> <p>Aujourd\u2019hui, ces partenaires sont r\u00e9unis dans la Fondation Micro:bit et pr\u00e9sente la version 2...</p>"},{"location":"IOT/BBC_microbit/#programmation","title":"Programmation","text":"<p>Il existe diff\u00e9rentes fa\u00e7on de programmer la carte BBC micro:bit, au lyc\u00e9e, nous allons privil\u00e9gier celle bas\u00e9e sur MicroPython une version all\u00e9g\u00e9e de Python cr\u00e9\u00e9e par Damien George pour la programmation de certains microcont\u00f4leurs dont celui du BBC micro:bit.</p> <p>Le code source du compilateur MicroPython pour BBC micro:bit a \u00e9t\u00e9 r\u00e9alis\u00e9 par des personnes b\u00e9n\u00e9voles du monde entier, sous la direction de Damien George, Nicholas Tollervey et Carlos Pereira Atencio...</p> <p>On peut d\u00e9sormais utiliser la version 3 de l'\u00e9diteur micropython en ligne  qui poss\u00e8de un simulateur int\u00e9gr\u00e9... </p>"},{"location":"IOT/BBC_microbit/#processus-de-programmation","title":"Processus de programmation","text":""},{"location":"IOT/BBC_microbit/#lediteur-micropython-officiel-en-ligne","title":"L'\u00e9diteur MicroPython officiel en ligne","text":"<ol> <li>Cliquer sur le bouton ci-dessus pour ouvrir l'\u00e9diteur dans un nouvel onglet ;</li> <li>Glisser/d\u00e9poser des bouts de code du menu de gauche dans la zone centrale d'\u00e9dition ;</li> <li>Tester le r\u00e9sultat de ces instructions dans le simulateur ;</li> <li>Modifier le code dans l'\u00e9diteur pour r\u00e9pondre au besoin ;</li> <li>V\u00e9rifier le r\u00e9sultat de votre script dans le simulateur ;</li> <li>Transf\u00e9rer votre programme dans une carte BBC micro:bit raccord\u00e9e au PC avec un cable USB ;</li> <li>Exp\u00e9rimenter sur le mat\u00e9riel r\u00e9el ;</li> <li>Recommencer jusqu'\u00e0 validation des exigences du cdcf...</li> </ol> <p>Ressource : Python Editor : Guide</p>"},{"location":"IOT/BBC_microbit/#bac-a-sable-pour-bbc-microbit-dans-capytale-avec-vittascience","title":"Bac \u00e0 sable pour BBC micro:bit dans Capytale avec Vittascience","text":"Autres solutions de programmation :"},{"location":"IOT/BBC_microbit/#lediteur-mu-sur-pc","title":"L'\u00e9diteur Mu sur PC","text":"<p>A partir de Cortana, rechercher et lancer l'application de bureau <code>Mu</code>, au d\u00e9marage choisir le mode <code>BBC micro:bit</code></p> <p>Par rapport \u00e0 l'\u00e9diteur en ligne, cette application offre des fonctionnalit\u00e9s suppl\u00e9mentaires tr\u00e8s int\u00e9ressantes accessibles par ces quatres boutons :</p> <p></p> <p>Remarque : ces boutons ne fonctionnent que s'il y a une carte BBC micro:bit connect\u00e9e par un c\u00e2ble USB au PC.</p> <p>Ces fonctions sont expos\u00e9es dans ce rapide tutoriel : https://codewith.mu/en/tutorials/1.0/microbit</p> <p>Cliquer sur le bouton \u201cFlash\u201d permet en quelques secondes de t\u00e9l\u00e9verser votre code dans la m\u00e9moire flash du \u00b5C du BBC micro:bit en effa\u00e7ant et rempla\u00e7ant le programme pr\u00e9c\u00e9dent. En cas d'erreur dans votre code un message d\u00e9filera sur la matrice \u00e0 LED.</p> <p></p> <p>Lorsqu'un programme MicroPython est t\u00e9l\u00e9vers\u00e9 dans un BBC micro:bit, il dispose d\u2019un r\u00e9pertoire permettant de stocker des fichiers. Le bouton \u00abFichiers\u00bb de Mu facilite l\u2019acc\u00e8s, la mise en place, la r\u00e9cup\u00e9ration et la suppression de fichiers sur votre appareil.</p> <p>Comme indiqu\u00e9 ci-dessous, cliquer sur \u00abFichiers\u00bb ouvre deux panneaux entre l\u2019\u00e9diteur de texte et le pied de page de Mu. Le volet de gauche r\u00e9pertorie tous les fichiers du dossier BBC micro:bit, le volet de droite r\u00e9pertorie tous les fichiers de votre r\u00e9pertoire <code>mu_code</code> sur votre ordinateur. Faites glisser les fichiers de l'un \u00e0 l'autre pour les copier. Pour supprimer un fichier sur le BBC micro:bit, cliquez dessus avec le bouton droit de la souris et s\u00e9lectionnez \u00abSupprimer\u00bb.</p> <p></p> <p>Remarque : cette fonction n'est disponible que si vous avez pr\u00e9alablement charg\u00e9 un fichier en MicroPython sur la carte.</p> <p>Le bouton \u00abREPL\u00bb cr\u00e9e un nouveau volet entre l\u2019\u00e9diteur de texte et le pied de page de Mu, qui se connecte \u00e0 l'interpr\u00e9teur MicroPython du p\u00e9riph\u00e9rique BBC micro:bit. Le terme \u201cREPL\u201d est un acronyme et signifie \u201cLire, \u00c9valuer, Imprimer, Boucler\u201d, (Read-Evaluate-Print-Loop), ce qui d\u00e9crit succinctement ce que le panneau fait pour vous. Il lit les instructions de Python que vous tapez, \u00e9value leur signification, affiche le r\u00e9sultat obtenu, puis effectue une boucle pour attendre votre prochaine instruction Python.</p> <p></p> <p>Comme vous pouvez le constater dans l'exemple ci-dessus, utiliser le REPL de MicroPython revient \u00e0 avoir une conversation avec le BBC micro:bit en Python. Tout ce que vous pouvez faire dans un script Python classique, vous pouvez le faire dans le REPL. C\u2019est une fa\u00e7on amusante d\u2019explorer de fa\u00e7on ludique les capacit\u00e9s de MicroPython sur le BBC micro:bit.</p> <p>C'est donc le moment d'essayer des choses... Par exemple, commencez par taper <code>help()</code>dans le REPL de l'\u00e9diteur Mu et laissez-vous guider par les propositions sugg\u00e9r\u00e9es l\u00e0... Saurez-vous y d\u00e9couvrir le Zen de MicroPython ?</p> <p>Enfin, le bouton \"Plot\" ouvre le traceur de Mu. Si votre BBC micro:bit produit des tuples de nombres via la connexion s\u00e9rie, le traceur les affiche sous forme de graphique. Ceci est extr\u00eamement utile pour visualiser les donn\u00e9es que vous pourriez mesurer via le BBC micro:bit. Pour plus d\u2019informations \u00e0 ce sujet, lisez le tutoriel sur le traceur de Mu.</p> <p></p> <p>Le site de l'\u00e9diteur Mu : http://codewith.mu et son d\u00e9pot GitHub : https://github.com/mu-editor/mu</p>"},{"location":"IOT/BBC_microbit/#lediteur-thonny-sur-pc","title":"L'\u00e9diteur Thonny sur PC","text":""},{"location":"IOT/BBC_microbit/#autre-processus","title":"Autre processus :","text":"<ol> <li>On peut d\u00e9buter avec l'\u00e9diteur en ligne https://app.edublocks.org/ pour g\u00e9n\u00e9rer un script en python \u00e0 partir des blocs d'instructions. Le principe consiste \u00e0 glisser/d\u00e9poser des blocs d'instructions du menu de gauche dans la zone graphique pour obtenir le code Python correspondant.</li> <li>pour tester un programme par simulation, on peut copier/coller le code en Python dans le simulateur de https://create.withcode.uk/ et puis on clique sur le bouton <code>Run</code> ou la combinaison de touches <code>Ctrl+Entr\u00e9e</code> pour l'ex\u00e9cuter...</li> <li>Enfin, pour valider un programme sur le mat\u00e9riel r\u00e9el :<ul> <li>on raccorde une carte BBC micro:bit avec un cable sur un port USB de l'ordinateur. Le PC doit reconnaitre la carte comme un nouveau lecteur nomm\u00e9 : <code>MICROBIT (E:)</code> ;</li> <li>on ouvre l'ancien \u00e9diteur micropython officiel https://python.microbit.org/v/2 ;</li> <li>on clique sur le bouton <code>Connect</code>, et on s\u00e9lectionne la carte <code>\"BBC micro:bit CMSIS-DAP\"</code> \u00e0 associer, puis on clique sur le bouton <code>Connexion</code> pour \u00e9tablir la communication ;</li> <li>Une fois connect\u00e9, on clique sur le bouton <code>Flash</code> pour charger le programme qui s'ex\u00e9cutera d\u00e8s que la LED jaune situ\u00e9e \u00e0 l'arri\u00e8re de la carte aura fini de clignoter ;</li> <li>Pour revoir le r\u00e9sultat du programme une nouvelle fois, il faut red\u00e9marrer le BBC micro:bit en appuyant sur le bouton <code>RESET</code> situ\u00e9 \u00e0 l'arri\u00e8re de la carte...</li> </ul> </li> </ol>"},{"location":"IOT/BBC_microbit/#autres-possibilites","title":"Autres possibilit\u00e9s :","text":"<ul> <li>microsoft makecode</li> <li>vittascience ;</li> </ul>"},{"location":"IOT/BBC_microbit/#cartes-dextensions","title":"Cartes d'extensions","text":""},{"location":"IOT/BBC_microbit/#breadboard","title":"Breadboard","text":""},{"location":"IOT/BBC_microbit/#yahboom","title":"Yahboom","text":"<ul> <li> <p>Building:bit starter kit</p> </li> <li> <p>Building:bit superkit</p> </li> <li> <p>Sensor kit</p> </li> </ul>"},{"location":"IOT/BBC_microbit/#4tronix","title":"4tronix","text":"<ul> <li> <p>Bit:Bot V1.3</p> </li> <li> <p>Robot:Bit MK3 V1.2</p> </li> </ul>"},{"location":"IOT/BBC_microbit/#elecfreaks","title":"Elecfreaks","text":"<ul> <li> <p>Motor:Bit V1.4</p> </li> <li> <p>Robit V1.4</p> </li> <li> <p>Joystick:Bit V1.4</p> </li> </ul> Ressources : <ul> <li>https://fr.wikipedia.org/wiki/Micro:bit</li> <li>https://microbit.org/get-started/user-guide/firmware/ </li> </ul> <p>RTFD : https://microbit-micropython.readthedocs.io</p> <p>Le d\u00e9pot GitHub des codes sources de MicroPython pour le BBC micro:bit et de l'\u00e9diteur en ligne : - https://github.com/bbcmicrobit</p> <p>MicroPython : - Site : http://micropython.org/ - GitHub :  - Livre \"Programmer avec MicroPython\" : https://github.com/ntoll/programming-with-micropython</p> <p>Support :  - https://support.microbit.org/support/home  - http://microbit.org/fr/guide/features/ - https://tech.microbit.org/</p> <p>Mod\u00e8le 3D du BBC micro:bit https://www.kitronik.co.uk/blog/bbc-microbit-cad-resources/</p> <p>Sites de profs :</p> <ul> <li>http://numerique.ostralo.net/microbit/partie0_accueil/0_accueil.htm</li> <li>https://physique.david-therincourt.fr/les-bases-de-micropython-pour-la-microbit/</li> <li>https://ellasciences.jimdofree.com/python/bbc-micro-bit/</li> <li>https://laboiteaphysique.fr/site2/</li> <li>https://www.astrovirtuel.fr/microbit/ </li> <li>https://www.isnbreizh.fr/nsi/activity/microbitRessources/index.html </li> </ul> <p>Des tutoriel et projets :</p> <ul> <li>http://www.multiwingspan.co.uk/micro.php</li> <li>https://learn.adafruit.com/bbc-micro-bit-lesson-number-0/intro</li> <li>https://www.instructables.com/id/Microbit-Selfie-Remote/</li> </ul> <p>Quelques projets depuis une Rasberry Pi en MicroPython avec l'\u00e9diteur MU :</p> <ul> <li>https://projects.raspberrypi.org/en/projects/getting-started-with-microbit</li> <li>https://projects.raspberrypi.org/en/projects/microbit-selfies</li> <li>https://projects.raspberrypi.org/en/projects/microbit-meteorologist</li> <li>https://projects.raspberrypi.org/en/projects/micromine-bitcraft</li> <li>https://github.com/raspberrypilearning/microbit-game-controller</li> </ul> <p>Micro:bit with Arduino : https://learn.adafruit.com/use-micro-bit-with-arduino/overview</p>"},{"location":"IOT/BBC_microbit/JoystickBit/","title":"JoystickBit","text":""},{"location":"IOT/BBC_microbit/JoystickBit/#carte-joystickbit","title":"CARTE JOYSTICK:BIT","text":"<p>Joystick:bit v1.4 de ELECTROFREAKS</p> <p></p> <ul> <li>pin2 : <code>pin2.read_analog()</code> d\u00e9tecte le bouton press\u00e9</li> <li><code>buttons = {2: \"A\", 517: \"B\", 686: \"C\", 769: \"D\", 853: \"E\", 820: \"F\", 1021 : \"aucun\"}</code></li> <li>pin0 et pin1 donnent la position du joystick :<ul> <li><code>pin0.read_analog()</code> sur X : 3~1021 et Xcentre = 529</li> <li><code>pin1.read_analog()</code> sur Y : 3~1021 et Ycentre = 506</li> </ul> </li> </ul> <p>/! Ces valeurs sont approximatives car elles varient d\u2019une carte Joystick:bit \u00e0 l\u2019autre !</p>"},{"location":"IOT/BBC_microbit/JoystickBit/#pour-tester-le-joystickbit","title":"Pour tester le Joystick:bit","text":""},{"location":"IOT/BBC_microbit/JoystickBit/#les-coordonnees-du-joystick","title":"Les coordonn\u00e9es du joystick","text":"<pre><code>from microbit import *\nimport radio\n#######################################\n# TEST : JOYSTICK:BIT\nwhile True:\n    press = pin2.read_analog()\n    print(\"bouton : \"+ str(press))\n    X = pin0.read_analog()\n    Y = pin1.read_analog()\n    print(\"joystick : \"+str(X)+\" , \"+str(Y))\n    sleep(100)\n</code></pre>"},{"location":"IOT/BBC_microbit/JoystickBit/#emetteur-radio-carte-joystickbit","title":"Emetteur radio (carte Joystick:bit)","text":"<pre><code>from microbit import *\nimport radio\n\n#######################################\n# JOYSTICK:BIT\ndef button_press():\n    press = pin2.read_analog()\n    if press &gt; 938:  # le plus fr\u00e9quent car aucun bouton : press=1021\n        return \"\"\n    elif press &lt; 256:\n        return \"A\"\n    elif press &lt; 597:\n        return \"B\"\n    elif press &lt; 725:\n        return \"C\"\n    elif press &lt; 793:\n        return \"D\"\n    elif press &lt; 836:\n        return \"F\"\n    else:\n        return \"E\"\n\ndef joystick_push():\n    # Par d\u00e9faut : x = 529 (3~1021)   y = 506 (3~1022)\n    # map (1~1023) to (-1022~1022)\n    x = 2 * pin0.read_analog() - 1024\n    y = 2 * pin1.read_analog() - 1024\n    if -100 &lt; x &lt; 100:\n        x = 0\n    if -100 &lt; y &lt; 100:\n        y = 0\n    return x, y\n\n\nradio.config(channel=7, group=0, queue=1, power=7)\nradio.on()\nwhile True:\n    X, Y = joystick_push()       \n    message = str(X) + \"|\" + str(Y) + \"|\" + button_press()\n    radio.send(message)      # ex : \"-700|400|\"\n</code></pre>"},{"location":"IOT/BBC_microbit/JoystickBit/#recepteur-radio-carte-motorbit","title":"R\u00e9cepteur radio (carte motor:bit)","text":"<pre><code>from microbit import *\nimport radio\n\n###################################\n# MOTOR:BIT   M1=gauche   M2=droite\n\ndef drive(vitesseX, vitesseY): # vitesse : -1023 ~ 1023\n    if vitesseX &lt; 0:\n        vitesseX = - vitesseX\n        pin8.write_digital(0)  # direction M1\n    else:\n        pin8.write_digital(1)  # direction M1\n\n    if vitesseY &lt; 0:\n        vitesseY = - vitesseY\n        pin12.write_digital(1)  # direction M2\n    else:\n        pin12.write_digital(0)  # direction M2\n\n    if vitesseX &gt; 900:\n        vitesseX = 900\n    if vitesseY &gt; 900:\n        vitesseY = 900\n    pin1.write_analog(vitesseX) # vitesse M1\n    pin2.write_analog(vitesseY) # vitesse M2\n\n\nradio.config(channel=7, group=0, queue=1, power=7)\nradio.on()\nancien_bouton = \"\"\nwhile True:\n    msg_recu = radio.receive()\n    if msg_recu is not None:\n        [joystickX, joystickY, bouton] = msg_recu.split(\"|\")\n\n        # moteur\n        joystickX = int(joystickX)\n        joystickY = int(joystickY)\n        drive(joystickY + joystickX//3 , joystickY - joystickX//3)\n\n        # bouton\n        # /!\\ redondances car un appui bref de btn A donne \"A\" \"A\" \"A\" \"A\"\n        if bouton != ancien_bouton:\n            # faire qqch\n        ancien_bouton = bouton\n</code></pre>"},{"location":"IOT/BBC_microbit/MotorBit/","title":"MotorBit","text":""},{"location":"IOT/BBC_microbit/MotorBit/#carte-moteur-motorbit","title":"CARTE MOTEUR MOTOR:BIT","text":"<ul> <li>https://www.elecfreaks.com/motor-bit-for-micro-bit-motorbit.html</li> <li>https://www.elecfreaks.com/learn-en/microbitExtensionModule/motor_bit_v16.html?highlight=motor%20bit</li> </ul> <p>Cette carte int\u00e8gre un TB6612 qui est un circuit \u00e0 double pont en H permettant d'alimenter deux Moteur \u00e0 Courant Continu (MCC) (ou un Moteur Pas \u00e0 Pas, ou 4 sol\u00e9no\u00efdes)</p> <p></p>"},{"location":"IOT/BBC_microbit/MotorBit/#broches-moteurs","title":"Broches moteurs","text":"<ul> <li>P8    : Direction de M1, sens positif de rotation en tension HIGH (digital = 1), sens n\u00e9gatif sur LOW (digital = 0) ;</li> <li>P1    : Vitesse de M1 en MLI (PWM) (analog = entre 0 et 1023) ;</li> <li>P2    : Vitesse de M2 en MLI (PWM) (analog = entre 0 et 1023) ;</li> <li>P12   : Direction de M2, sens positif de rotation en tension HIGH, sens n\u00e9gatif sur LOW.</li> </ul> <pre><code>from microbit import *\n\ndef avance(v):\n    # le mode \"avance\" \u00e0 la vitesse v (entier entre 0 et 1023)\n    pin8.write_digital(1)  # direction M1\n    pin12.write_digital(0) # direction M2\n    pin1.write_analog(v) # vitesse M1\n    pin2.write_analog(v) # vitesse M2\n\ndef recule(v):\n    pin8.write_digital(0)  # direction M1\n    pin12.write_digital(1) # direction M2\n    pin1.write_analog(v) # vitesse M1\n    pin2.write_analog(v) # vitesse M2\n\navance(300) # le robot avance pendant 2s (vitesse faible)\nsleep(2000)\nrecule(300) # le robot recule pendant 2s\nsleep(2000)\navance(0)   # le robot s'arr\u00eate\n</code></pre>"},{"location":"IOT/BBC_microbit/MotorBit/#buzzer","title":"Buzzer","text":"<ul> <li>P0 : buzzer</li> </ul>"},{"location":"IOT/BBC_microbit/MotorBit/#broches-jaunes","title":"Broches jaunes","text":"<ul> <li>P3-P7, P9-P11 : 8 broches aliment\u00e9es en 3,3V .</li> <li>P3, P4, P10 : peuvent \u00eatre utilis\u00e9es en mode \u00ab Entr\u00e9e de signal analogique \u00bb.</li> </ul> <p>ATTENTION : pour utiliser les broches P3, P4, P6, P7, P9, P10 (d\u00e9di\u00e9es aux 25 leds), il faut ajouter :</p> <ul> <li><code>display.off()</code> pour d\u00e9sactiver l\u2019affichage</li> <li><code>display.on()</code> pour r\u00e9activer les leds</li> </ul>"},{"location":"IOT/BBC_microbit/MotorBit/#broches-bleues","title":"Broches bleues","text":"<p>Si le commutateur VCC (juste au-dessus) est sur 5V, alors les broches rouges donnent du 5V et le niveau de signal des broches bleues est sur 5V aussi. Si le commutateur VCC est sur 3,3V, alors les rouges d\u00e9livrent du 3,3V et le niveau du signal des bleues est aussi 3,3V.</p> <ul> <li>P13-P16 : 4 ports GPIO</li> <li>P19-P20 : 1 connecteur de communication IIC</li> </ul>"},{"location":"IOT/BBC_microbit/UART/","title":"UART","text":"<p>Le module UART permet de d\u00e9tourner la communication s\u00e9rie vers un composant externe pour \u00e9tablir ici une communication bluetooth via un HC-05.</p>"},{"location":"IOT/BBC_microbit/UART/#experimentation","title":"Exp\u00e9rimentation","text":"<ul> <li> <p>Installer l'application Andro\u00efd Serial Bluetooth Terminal</p> </li> <li> <p>T\u00e9l\u00e9verser le programme suivant sur la carte BBC micro:bit ;</p> </li> </ul> <pre><code>from microbit import *\nimport music\n\n# Initialise une communication s\u00e9rie externe vers le module bluetooth HC-05\n# Sur Grove Shield tx=pin0, rx=pin14\n# Sur Elecfreaks Octopus:bit tx=pin8, rx=pin12\nuart.init(baudrate=9600, bits=8, parity=None, stop=1, tx=pin8, rx=pin12)\n# Ce qui d\u00e9tourne et d\u00e9sactive la communication s\u00e9rie \"normale\" via l'USB vers le PC\n# Et donc \u00e9galement la console REPL (et Graphique)...\n\n\n\nuart.write('hello world \\n')\nuart.write(b'hello world \\n')\nuart.write(bytes([1, 2, 3, 4, 5]))\n\nmessage = \"Hello from micro:bit\"\n\nwhile True:\n\n    if button_a.is_pressed() :\n        uart.write(message + \"\\n\") # \"\\n\" ajoute (concat\u00e8ne) un saut de ligne\n        print(message) # fonctionne \u00e9galement du fait du d\u00e9tournement de la communication s\u00e9rie, le saut de ligne est inclu.\n        sleep(1000)\n    if button_b.is_pressed() :\n        uart.write(str(temperature()) + \"\\n\") # \"\\n\" ajoute (concat\u00e8ne) un saut de ligne apr\u00e8s la temp\u00e9rature du BBC\n        print(temperature()) # fonctionne \u00e9galement du fait du d\u00e9tournement de la communication s\u00e9rie, le saut de ligne est inclu.\n        sleep(1000)\n    if uart.any() : # D\u00e8s que des donn\u00e9es attendent\n        reponse_bytes = uart.read()\n        uart.write(reponse_bytes)\n        print(reponse_bytes)\n        if reponse_bytes == b'ON\\r\\n' :\n            pin13.write_digital(1)            \n        if reponse_bytes == b'OFF\\r\\n' :\n            pin13.write_digital(0)            \n        if reponse_bytes == b'PYTHON\\r\\n' :\n            music.play(music.PYTHON)\n    if pin14.read_digital()==0 :\n        niveau = pin1.read_analog()\n        pin2.write_analog(niveau)\n        uart.write(str(niveau) + \"\\n\")\n        sleep(1000)        \n</code></pre> <ul> <li>Adapter si besoin les param\u00e8tres de raccordement du HC-05</li> </ul> Fil Broche Grove ElecFreaks MK3 Robo:bit blanc Rx P14 P12 P14 jaune Tx P0 P8 P16 <pre><code># Adaptation pour MK3 Robo:bit\nfrom microbit import *\n\nuart.init(baudrate=9600, bits=8, parity=None, stop=1, tx=pin16, rx=pin14)\n\nmessage = \"Hello from micro:bit\"\n\ndef Drive(lft,rgt):\n    pin8.write_digital(0)\n    pin12.write_digital(0)\n    if lft&lt;0:\n        pin8.write_digital(1)\n        lft = 1023 + lft\n    if rgt&lt;0:\n        rgt = 1023 + rgt\n        pin12.write_digital(1)\n    pin0.write_analog(lft)\n    pin1.write_analog(rgt)\n\nwhile True:\n    if button_a.is_pressed() :\n        uart.write(message + \"\\n\") # \"\\n\" ajoute (concat\u00e8ne) un saut de ligne\n        print(message) # fonctionne \u00e9galement du fait du d\u00e9tournement de la communication s\u00e9rie, le saut de ligne est inclu.\n        sleep(1000)\n    if uart.any() : # D\u00e8s que des donn\u00e9es attendent\n        reponse_bytes = uart.read()\n        uart.write(reponse_bytes)\n        print(reponse_bytes)\n        if reponse_bytes == b'ON\\r\\n' :\n            Drive(800,800)\n            sleep(1000)            \n        if reponse_bytes == b'OFF\\r\\n' :\n            Drive(0,0)\n            sleep(1000)  \n</code></pre> <ul> <li> <p>Dans l'application Serial Bluetooth Terminal, enregistrer dans les m\u00e9moires des commandes \u00e0 transmettre pour tester ce programme et expliquer ce qu'il fait...</p> <ul> <li>en hexad\u00e9cimal :<ul> <li><code>03</code> cr\u00e9er une interruption du programme en cours et ouvre le REPL \u00e9quivalent \u00e0 ^C ;</li> <li><code>04</code> cr\u00e9er un red\u00e9marrage du programme <code>main.py</code> \u00e9quivalent \u00e0 ^D ;</li> </ul> </li> <li>en texte :<ul> <li><code>ON</code> pour allumer la LED connect\u00e9e sur pin0 ;</li> <li><code>OFF</code> pour l'\u00e9teindre ;</li> <li>d'autres commandes comme par exemple <code>display.show(Image.HAPPY)</code> \u00e0 transmettre en mode REPL.</li> </ul> </li> </ul> </li> </ul>"},{"location":"IOT/BBC_microbit/UART/#fonctions-utiles-dans-le-module-uart","title":"Fonctions utiles dans le module uart :","text":"<p>microbit.uart.init (baudrate = 9600, bits = 8, parity = None, stop = 1, *, tx = None, rx = None) - initialise la communication avec la s\u00e9rie. bauderate - repr\u00e9sente la vitesse de communication avec la s\u00e9rie, il peut prendre les valeurs suivantes: 9600, 14400, 19200, 28800, 38400, 57600, 115200.</p> <p>bits - repr\u00e9sente le nombre de bits qui seront transmis.</p> <p>parity - montre comment v\u00e9rifier la parit\u00e9; peut prendre les valeurs: Aucun, microbit.uart.ODD, microbit.uart.EVEN.</p> <p>stop - repr\u00e9sente le nombre de bits d'arr\u00eat, dans le cas de cette plaque, la valeur est 1.</p> <ul> <li><code>uart.any</code> - renvoie True s'il attend des donn\u00e9es, sinon il retournera False .</li> <li><code>uart.read([nbytes])</code> - lecture de bits. Le param\u00e8tre nbytes est facultatif, mais s'il est sp\u00e9cifi\u00e9, au plus nbytes seront lus.</li> <li><code>uart.readinto(buf [, nbytes])</code> - renvoie le nombre de bits lus et stock\u00e9s dans buf ou renvoie None \u00e0 l'expiration du d\u00e9lai.</li> <li><code>uart.readline()</code> - lit une ligne se terminant par une nouvelle ligne.</li> <li><code>uart.write(buff)</code> - \u00e9crit le buffer.</li> </ul> <p>source : https://ocw.cs.pub.ro/courses/sde2/laboratoare/11_microbit_fr</p>"},{"location":"IOT/BBC_microbit/UART/#ressources-utiles","title":"Ressources utiles :","text":"<ul> <li> <p>Octopus:bit : https://wiki.elecfreaks.com/en/microbit/expansion-board/octopus-bit</p> </li> <li> <p>Exemples micropython : https://wiki.elecfreaks.com/en/microbit/getting-started/microbit-tinker-kit/tinker_kit_case_34/#getting-started</p> </li> <li> <p>Source \u00e0 regarder :</p> <ul> <li>https://ocw.cs.pub.ro/courses/start?do=search&amp;id=microbit</li> <li>https://ocw.cs.pub.ro/courses/sde2/laboratoare/12_microbit_fr</li> </ul> </li> <li> <p>Affichage sur \u00e9cran OLED via communication I2C :</p> <ul> <li>tutoriel d\u00e9taill\u00e9 ;</li> <li>GitHub du module microbit_ssd1306</li> <li>Autres tutoriels :<ul> <li>https://blog.martinfitzpatrick.com/oled-displays-i2c-micropython/</li> <li>https://www.instructables.com/Microbit-OLED-Game/</li> </ul> </li> <li>Autre module kitronik</li> </ul> </li> </ul>"},{"location":"IOT/BBC_microbit/dev/","title":"Dev","text":""},{"location":"IOT/BBC_microbit/dev/#communication-serie","title":"Communication s\u00e9rie","text":"<ul> <li>https://www.isnbreizh.fr/nsi/activity/microbitSerial/index.html</li> <li> <p>https://www.isnbreizh.fr/snt/activity/microbit/microbitSerial/microbitSerial.html</p> </li> <li> <p>https://www.xanthium.in/Cross-Platform-serial-communication-using-Python-and-PySerial</p> </li> </ul> <p>PC (Putty) &lt;-&gt; PC (Putty) (RS232 COM1) PC (Putty) &lt;-&gt; BBC1 PC (Python) &lt;-&gt; BBC1 iPad &lt;- ThingSpeak &lt;- PC (Python) &lt;-&gt; BBC1 BBC1 (UART) &lt;-&gt; BBC2 (UART) BBC &lt;-&gt; HCO5 &lt;-&gt; Smartphone BBC &lt;-&gt; ESP8266 &lt;-&gt; ThingSpeak BBC &lt;-&gt; ESP32 &lt;-&gt;</p> <p>I2C RTC</p> <p>Analyseur logique</p> <ul> <li>Communication s\u00e9rie RS232</li> </ul> <p> <p></p> <ul> <li>Serial Communication on Pi / Arduino / micro:bit</li> </ul> <p> <p></p> <pre><code>from microbit import *\n\nuart.init(baudrate=9600, bits=8, parity=None, stop=1, tx=pin8, rx=pin12)\n\nid = \"E\"\ndisplay.scroll(\"I'm \" + id)\n\nwhile True :\n    uart.write(id)\n    sleep(2)\n</code></pre> <pre><code>from microbit import *\n\nuart.init(baudrate=9600, bits=8, parity=None, stop=1, tx=pin8, rx=pin12)\n\nid = \"F\"\ndisplay.scroll(\"I'm \" + id)\n\nwhile True :\n    if uart.any() :\n        sleep(2)\n        uart.write(id)\n</code></pre> <p>A voir : https://www.youtube.com/watch?v=cxfT407wRgc</p> <pre><code>from microbit import *\n\nuart.init(baudrate=9600, bits=8, parity=None, stop=1, tx=pin1, rx=pin0)\n\ncode = \"B\"\ndisplay.scroll(\"code\" + code)\n\nwhile True :\n\n    if uart.any() :\n        uart.write(code)\n        message = uart.read()\n        display.scroll(message)\n    sleep(2)\n</code></pre> <pre><code>from microbit import *\n\n\nuart.init(baudrate=9600, bits=8, parity=None, stop=1, tx=pin0, rx=pin1)\n\ncode = \"AAA\"\ndisplay.scroll(\"code\" + code)\n\nwhile True :\n    if uart.any() :\n        message = uart.read()\n        display.scroll(message)\n    else :\n        sleep(20)\n\n    if button_a.is_pressed() :\n        uart.write(code)\n        sleep(50)\n</code></pre>"},{"location":"IOT/ESP/","title":"Index","text":""},{"location":"IOT/ESP/#ressources-generales","title":"Ressources g\u00e9n\u00e9rales :","text":"<ul> <li>Une mine de vid\u00e9os en Fran\u00e7ais <p>Son d\u00e9pot GitHub : https://github.com/christianDUCROS</p> </li> </ul>"},{"location":"IOT/ESP/32/","title":"ESP32","text":""},{"location":"IOT/ESP/32/#preparation-de-lesp32-pour-micropython","title":"Pr\u00e9paration de l'ESP32 pour MicroPython","text":""},{"location":"IOT/ESP/32/#avec-le-logiciel-thonny","title":"Avec le logiciel Thonny","text":"<ul> <li>Installer la derni\u00e8re version du logiciel ;</li> <li>Connecter la carte ESP32 \u00e0 votre PC via un cable USB ;</li> <li>D\u00e9marrer Thonny ;</li> <li>Dans le menu horizontal, cliquer sur <code>Ex\u00e9cuter</code> et choisir <code>Configurer l'interpr\u00e9teur</code> ;</li> <li>Choisir le type d'interpr\u00e9teur et le port s\u00e9rie correspondants \u00e0 la carte ;</li> <li>Cliquer sur le lien <code>Installer ou mettre \u00e0 jour MicroPython (esptool)</code> ;</li> </ul> <ul> <li>Renseigner tous les champs (lire les inscriptions idoines sur le \u00b5C) puis cliquer sur <code>Installer</code> ;</li> </ul> <p>Si tout se passe bien, le prompt de l'interpr\u00e9teur MicroPython doit apparaitre en console...</p>"},{"location":"IOT/ESP/32/#avec-le-logiciel-mu","title":"Avec le logiciel Mu","text":"<ul> <li>Installer la derni\u00e8re version du logiciel ;</li> <li>Connecter la carte ESP32 \u00e0 votre PC via un cable USB ;</li> <li>D\u00e9marrer Mu Editor  et Choisir le mode <code>ESP MicroPython</code> ;</li> <li>Cliquer sur le rouage tout en bas \u00e0 droite et choisir l'onglet <code>ESP Firmware flasher</code> puis Suivre les instructions...  ;</li> </ul> <p>Si tout se passe bien, cliquer sur le bouton <code>REPL</code> du menu et le prompt de l'interpr\u00e9teur MicroPython doit apparaitre en console...</p>"},{"location":"IOT/ESP/32/#connecter-lesp32-a-un-point-dacces","title":"Connecter l'ESP32 \u00e0 un point d'acc\u00e8s","text":"<p>Point d'acc\u00e8s = un r\u00e9seau WLAN avec un des routeurs du labo de SI, un partage de connexion \u00e0 votre smartphone...</p> <ul> <li>Saisir le programme MicroPython suivant : <pre><code># ESP32 : connexion \u00e0 un point d'acc\u00e8s Wifi\nimport network\nimport time\nimport ubinascii\nwlan = network.WLAN(network.STA_IF)  # On cr\u00e9er l'objet wlan pour g\u00e9rer la connexion\nwlan.active(True) # Activation de l'interface\nif not wlan.isconnected() :  # On v\u00e9rifie qu'on n'est pas d\u00e9j\u00e0 connect\u00e9\n    print(\"Connexion au point d'acc\u00e8s...\")\n    # On demande une connexion en renseignant l'identifiant et le mot de passe du point d'acc\u00e8s\n    wlan.connect('SSID', \"Code\")\n    # Boucle d'attente...\n    while not wlan.isconnected() :\n        print('Connexion en cours...')\n        time.sleep(0.5)\n# Confirmation de connexion\nprint(\"Connect\u00e9 en Wifi au point d'acc\u00e8s\")\n# Affiche l'adresse logique que l'ESP32 \u00e0 obtenu du DHCP\nprint(\"Adresse IP de l'ESP32 = \", wlan.ifconfig()[0])\n# Affiche l'adresse physique de l'ESP32\nprint(\"Adresse MAC de l'ESP32 = \", ubinascii.hexlify(wlan.config('mac')).decode('utf-8'))\n</code></pre></li> </ul> A exp\u00e9rimenter... <ul> <li>Saisir l'instruction <code>wlan.ifconfig()</code> dans l'interpr\u00e9teur pour obtenir plus d'informations concernant le r\u00e9seau ;</li> <li>Configurer une autre adresse IP statique compatible avec l'instruction <code>wlan.ifconfig('IP statique', 'Masque', 'IP Passerelle', 'IP DNS')</code></li> <li>Quelle instruction permet d'obtenir l'adresse de la passerelle ?</li> <li>Tester la connexion de l'ESP32 vers la passerelle \u00e0 l'aide du module uping.py \u00e0 installer dans les fichiers de l'ESP32</li> </ul> <p><pre><code>import uping\nuping.ping('IP de la passerelle')\n</code></pre> - Am\u00e9liorer l'affichage de l'adresse MAC ; - En cas d'erreur de saisi ou d'indisponibilit\u00e9 du point d'acc\u00e8s on rentre dans une boucle infinie, am\u00e9liorer le script pour limiter le d\u00e9lai d'attente \u00e0 30 secondes...  - Scanner les point d'acc\u00e8s Wifi disponible avec l'instruction <code>wlan.scan()</code> ...</p>"},{"location":"IOT/ESP/32/#communication-tcp-clientserveur","title":"Communication TCP Client/Serveur","text":""},{"location":"IOT/ESP/32/#serveur-esp32","title":"Serveur = ESP32","text":"<ul> <li>Saisir le programme MicroPython suivant sur l'ESP32 :</li> </ul> <pre><code># ESP32 : programme pour serveur\nimport network\nimport socket\nimport time\nimport ubinascii\nwlan = network.WLAN(network.STA_IF)  # On cr\u00e9er l'objet wlan pour g\u00e9rer la connexion\nwlan.active(True) # Activation de l'interface\nif not wlan.isconnected() :  # On v\u00e9rifie qu'on n'est pas d\u00e9j\u00e0 connect\u00e9\n    print(\"Connexion au point d'acc\u00e8s...\")\n    # On demande une connexion au point d'acc\u00e8s\n    wlan.connect(\"SSID\", \"Code\")\n    # Boucle d'attente...\n    while not wlan.isconnected() :\n        print('Connexion en cours...')\n        time.sleep(0.5)\n# Confirmation de connexion\nprint(\"Connect\u00e9 en Wifi au point d'acc\u00e8s\")\n# Affiche l'IPV4 que l'ESP32 \u00e0 obtenu du DHCP\nprint(\"Adresse IP de l'ESP32 = \", wlan.ifconfig()[0])\n# Affiche l'adresse MAC de l'ESP32\nprint(\"Adresse MAC de l'ESP32 = \", ubinascii.hexlify(wlan.config('mac')).decode('utf-8'))\n# Partie serveur\ns = socket.socket()\ns.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n# Le serveur \u00e9coutera le port 2000 un client \u00e0 la fois\ns.bind(('0.0.0.0', 2000))\ns.listen(1)\n# Attente d'un client\nres = s.accept()\nclient_s = res[0]\nclient_adresse = res[1] # IP du client\nprint(\"Adresse IP du client : \", client_adresse)\nrequete = ''\n# Boucle tant que le client n'a pas envoy\u00e9 \"stop\"\nwhile not (requete == \"stop\\r\") :\n    # lecture de la requete du client\n    requete = client_s.recv(1024).decode('utf-8')\n    if requete == \"\" :  # le client se d\u00e9connecte\n        requete = 'stop\\r'\n    else :\n        # On affiche en console la requete du client\n        print(requete)\n# On ferme la communication avec le client\nclient_s.close()\n# On ferme le socket\ns.close()\n</code></pre>"},{"location":"IOT/ESP/32/#clients-pc-raspberry-pi-esp32","title":"Clients = [PC, Raspberry PI, ESP32]","text":"<ul> <li>D\u00e9marrer le logiciel TCP Client Server sur un PC connect\u00e9 au m\u00eame r\u00e9seau que l'ESP32 ;</li> <li>Cocher la case <code>Client</code> ;</li> <li>Renseigner l'adresse IP du serveur dans la case <code>IP</code> et pr\u00e9ciser le <code>Port</code> de communication choisi ;</li> <li>Cliquer sur le bouton <code>Connect</code> ;</li> </ul> <ul> <li>Transmettre vos demandes au serveur en cliquant sur le bouton <code>Send</code> ;</li> <li>V\u00e9rifier leur bonne r\u00e9ception en console ;</li> <li>Couper la connexion en cliquant sur le bouton <code>Close Connection</code> ;</li> <li>V\u00e9rifier l'arr\u00eat du serveur...</li> </ul> Client en Python sur PC ou Raspberry Pi <pre><code># Python programme pour client\nimport socket\nIP = '192.168.2.100'  # IP du serveur\nPORT = 2000 # Port choisi\n\ns = socket.socket()  # cr\u00e9ation du socket\ns.connect((IP,PORT))  # connection au serveur\ndemande=\"\"\nwhile not (demande == b\"stop\\r\\n\") :\n    demande = input('Demande \u00e0 envoyer = ')\n    demande = str.encode(demande + \"\\r\\n\")\n    s.send(demande) # envoi le message\n    # reponse_serveur = s.recv(1024).decode('utf-8')\n    # print('R\u00e9ponse serveur = ', reponse-serveur)\ns.close() # fermeture de la communication\n</code></pre> Client en MicroPython sur ESP32 <pre><code># ESP32 : programme pour serveur\nimport network\nimport socket\nimport time\nimport ubinascii\nwlan = network.WLAN(network.STA_IF)  # On cr\u00e9er l'objet wlan pour g\u00e9rer la connexion\nwlan.active(True) # Activation de l'interface\nif not wlan.isconnected() :  # On v\u00e9rifie qu'on n'est pas d\u00e9j\u00e0 connect\u00e9\n    print(\"Connexion au point d'acc\u00e8s...\")\n    # On demande une connexion au point d'acc\u00e8s\n    wlan.connect(\"SSID\", \"Code\")\n    # Boucle d'attente...\n    while not wlan.isconnected() :\n        print('Connexion en cours...')\n        time.sleep(0.5)\n# Confirmation de connexion\nprint(\"Connect\u00e9 en Wifi au point d'acc\u00e8s\")\n# Affiche l'IPV4 que l'ESP32 \u00e0 obtenu du DHCP\nprint(\"Adresse IP de l'ESP32 = \", wlan.ifconfig()[0])\n# Affiche l'adresse MAC de l'ESP32\nprint(\"Adresse MAC de l'ESP32 = \", ubinascii.hexlify(wlan.config('mac')).decode('utf-8'))\n# Partie client\ns = socket.socket()\n# On renseigne l'IP du serveur et le Port choisi\nip_serveur = '192.168.2.100'\nport = 2000\n# Connexion au serveur\ns.connect((ip_serveur, port))\ns.send(\"message de demande\")\n# reponse_serveur = s.recv(1024).decode('utf-8')\n# print('R\u00e9ponse serveur = ', reponse-serveur)\ns.close()\n</code></pre>"},{"location":"IOT/ESP/32/#communication-http-et-iot-avec-lesp32","title":"Communication HTTP et IOT avec l'ESP32","text":""},{"location":"IOT/ESP/32/#page-web-affichant-la-valeur-dun-capteur-analogique","title":"Page web affichant la valeur d'un capteur analogique","text":"<p>Connecter un potentiom\u00e8tre sur l'entr\u00e9e <code>I35</code> de l'ESP32 et y Saisir le programme MicroPython suivant : </p> <pre><code>import network\nimport time\nimport ubinascii\nTry :\n    import usocket as socket\nexcept :\n    import socket\n\n# On d\u00e9finit l'entr\u00e9e analogique utilis\u00e9e\ncapt_analog = ADC(Pin(35)) # on cr\u00e9e l'objet connect\u00e9 sur la broche 35\ncapt_analog.width(ADC.WIDTH_12BIT) # Pour 4096 valeurs\ncapt_analog.atten(ADC.ATTN_11DB)\n\n# Code HTML de la page Web renvoy\u00e9e par le serveur\nhtml = b\"\"\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;ESP32 capteur analogique&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n    &lt;/body&gt;\n... A compl\u00e9ter...\n</code></pre>"},{"location":"IOT/ESP/32/#page-web-avec-bouton-et-led","title":"Page web avec bouton et LED","text":"<p> <p></p>"},{"location":"IOT/ESP/32/#ressources","title":"Ressources :","text":"<ul> <li>Ressource officiel en Anglais : https://docs.micropython.org/en/latest/esp32/quickref.html#</li> <li> <p>Non officielle mais en Fran\u00e7ais  : https://micropython.fr/ (par Xavier HINAULT) </p> </li> <li> <p>Pour la SoproLab :</p> <ul> <li>https://j-chouteau.org/carte-soprolab</li> <li>https://github.com/SoproLab/Soprolab</li> </ul> </li> <li> <p>Simulateur ESP32 en ligne https://wokwi.com/</p> </li> <li> <p>Olivier L\u00e9cluse - Objets connect\u00e9s (IoT) - MicroPython sur ESP8266 et ESP32</p> </li> <li> <p>Olivier L\u00e9cluse - Installer micropython sur un ESP8266/32</p> </li> <li> <p>MicroPython : Module Relais avec ESP32/ESP8266 (Guide + Serveur Web)</p> </li> <li>/! site avec beaucoup de pub : https://www.robotique.tech/tutoriel/construction-des-objets-connectes-bases-sur-la-carte-esp32/</li> </ul>"},{"location":"IOT/ESP/32/DMX/","title":"DMX","text":""},{"location":"IOT/ESP/32/DMX/#_2","title":"DMX","text":"<pre><code>import esp32\nfrom machine import Pin\n\nr = esp32.RMT(2, pin=Pin(18), clock_div=80) # 80 pour avoir 80/80000000 = 1 \u00b5s\nprint(r.source_freq()) # 80000000 Hz\n\nsignal=(88,8,4,44,40,8,40,8,40,8,40) # les dur\u00e9es sont des multiples de 4 x 1 \u00b5s \nr.write_pulses(signal, start=0) # commence par l'\u00e9tat 0\n\ntrameDMXdec = [150,20,0,0,255,0,0,0,0,0,0,0,0,0,0,0] # les valeurs de 16 canaux\n\n# Conception trameDMXstr chaine de caract\u00e8res\nle_break = '0'*22 # 22 \u00e9tats 0\nle_mab = '11' # Mark After Break\ncode_depart = '0' + '0'*8 + '11' # 1 bit de start \u00e0 0 + une valeur = 0 en binaire sur huit bits + 2 bits de stop \u00e0 1\ntrameDMXstr = le_break + le_mab + code_depart\n\nfor i in range(0, len(trameDMXdec)) :\n    trameX = '0' # bit de start\n    for masque in [1,2,4,8,16,32,64,128] :\n        if (trameDMXdec[i] &amp; masque != 0) :\n            trameX += '1'\n        else :\n            trameX += '0'\n    trameX += '11' # 2 bits de stop\n    trameDMXstr += trameX\n\nprint(trameDMXstr)\n\n# Conception trameRMT \u00e0 partir du d\u00e9coupage de trameDMXstr\ntrameRMT = [] # liste des dur\u00e9es Etats haut puis Etats bas\nnb = 0\nlecture_precedente = '0'\n\nfor i in range (0, len(trameDMXstr)) :\n    if trameDMXstr[i] == lecture_precedente :\n        nb += 4 # 4\u00b5s pour 250kHz\n    else :\n        trameRMT.append(nb)\n        lecture_precedente = trameDMXstr[i]\n        nb = 4\ntrameRMT.append(nb)\nprint(trameRMT)\n</code></pre>"},{"location":"IOT/ESP/32/DMX/#ressources","title":"Ressources","text":"Trame DMX ESP32 micropython (sans biblioth\u00e8que) Protocole DMX en fran\u00e7ais par Christian DUCROS <ul> <li> <p>DMX - D\u00c9COUVERTE DE LA TECHNOLOGIE DMX512 Dominique Meurisse (MCHobby)</p> </li> <li> <p>Grove-DMX512</p> </li> <li> <p>esp32-rmt</p> </li> <li> <p>PyDMX est un package capable d'envoyer des donn\u00e9es DMX512 via un pilote</p> </li> </ul>"},{"location":"IOT/Lego/EV3/","title":"EV3","text":""},{"location":"IOT/Lego/EV3/#lego-mindstorms-education-ev3-micropython","title":"LEGO\u00ae MINDSTORMS Education EV3 MicroPython","text":""},{"location":"IOT/Lego/EV3/#ressource-officielle-version-v20","title":"Ressource officielle version v2.0","text":"<p>Toutes les informations sont disponibles sur le site : https://education.lego.com/en-us/support/mindstorms-ev3/python-for-ev3</p> <p>La documentation est disponible en Anglais au t\u00e9l\u00e9chargement en pdf ou directement en ligne</p> <p>Une traduction librement interpr\u00e9t\u00e9e est disponible sur le site www.ostralo.net/.</p>"},{"location":"IOT/Lego/EV3/#mise-en-reseau-par-wifi","title":"Mise en r\u00e9seau par wifi :","text":"<ul> <li> <p>Cr\u00e9er un r\u00e9seau LAN avec un routeur Wifi.</p> </li> <li> <p>Installer un dongle Wifi sur le port USB-A de la brique Lego EV3.</p> </li> <li> <p>Apr\u00e8s d\u00e9marrage du syst\u00e8me, configurer le r\u00e9seau WiFi depuis le menu de la brique...</p> </li> </ul> <p>Si la connexion Wifi est valide, l'adresse IP du robot s'affiche sur l'\u00e9cran (en haut)</p> <ul> <li>Pour tester le bon fonctionnement du robot, on peut se connecter via SSH. Les identifiants sont :</li> <li>utilisateur : robot</li> <li> <p>mot de passe : maker <pre><code>$ ssh robot@192.168.1.101\n</code></pre></p> </li> <li> <p>Pour lancer un script micropython depuis la console du robot par SSH :  <pre><code>$ brickrun pybricks-micropython /home/robot/hello.py\n</code></pre></p> </li> <li> <p>Pour lancer un interpr\u00e9teur depuis la console du robot par SSH afin d'ex\u00e9cuter une des fonctions de votre programme : <pre><code>$ cd monProjet # aller dans le dossier du projet\n$ brickrun pybricks-micropython # d\u00e9marrer l'interpr\u00e9teur Pybricks MicroPython\nPybricks MicroPython v1.11 on 2020-05-06; linux version\nUse Ctrl-D to exit, Ctrl-E for paste mode\n&gt;&gt;&gt; from monProgramme import *\n&gt;&gt;&gt; maFonction()\n</code></pre></p> </li> </ul>"},{"location":"IOT/Lego/EV3/#modularite","title":"Modularit\u00e9 :","text":"<p>D\u00e9velopper petit \u00e0 petit de fa\u00e7on modulaire, par fonctionnalit\u00e9...</p> <pre><code>#!/usr/bin/env pybricks-micropython\n\n# D\u00e9pendances\nfrom machin import bidule, truc\n\n# D\u00e9finitions\n\nbar = 'titi'\n\ndef foo() :\n    '''\n        Docstring de foo()\n    '''\n    pass\n\n# Tests\nif __name__ == '__main__': \n    # appel \u00e0 la fonction foo() pour un test\n    foo()\n    # affichage en console d'une variable\n    print(bar)\n</code></pre> <p>L'usage de Programmation Orient\u00e9e Objet peut \u00eatre judicieux ici...</p>"},{"location":"IOT/Lego/EV3/#autres-ressources","title":"Autres ressources :","text":"<ul> <li>Le module Pybricks MicroPython pour EV3 est bas\u00e9 sur ev3dev ;</li> <li>Tutoriel EV3 Python par Raphael Holzer ;</li> <li>https://sites.google.com/site/ev3devpython/ ;</li> </ul>"},{"location":"IOT/Lego/EV3/#modeles-de-conctruction","title":"Mod\u00e8les de conctruction","text":"<ul> <li> <p>Instructions pour diff\u00e9rents mod\u00e8les ;</p> </li> <li> <p>https://www.lego.com/fr-fr/themes/mindstorms/buildarobot ;</p> </li> </ul>"},{"location":"IOT/Lego/EV3/#la-mine-dantonsmindstorms","title":"La mine d'Antonsmindstorms ;","text":"MINDSTORMS EV3 Racecar with PS4 controller <p>Source : how-to-connect-a-ps4-dualshock-4-controller-to-your-mindstorms-ev3-brick-with-bluetooth ;</p> <pre><code>#!/usr/bin/env pybricks-micropython\n\nfrom pybricks.ev3devices import (Motor, TouchSensor, ColorSensor,\n                                InfraredSensor, UltrasonicSensor, GyroSensor)\nfrom pybricks.parameters import (Port, Stop, Direction, Button, Color,\n                                SoundFile, ImageFile, Align)\nfrom pybricks.tools import print, wait, StopWatch\n\nimport struct\n\n# Declare motors \nleft_motor = Motor(Port.B)\nright_motor = Motor(Port.C)\nsteer_motor = Motor(Port.A)\nforward = 0\nleft = 0\n\n\n# Auto center steering wheels.\nsteer_motor.run_until_stalled(250)\nsteer_motor.reset_angle(80)\nsteer_motor.run_target(300,0)\n\n\n# A helper function for converting stick values (0 - 255)\n# to more usable numbers (-100 - 100)\ndef scale(val, src, dst):\n    \"\"\"\n    Scale the given value from the scale of src to the scale of dst.\n\n    val: float or int\n    src: tuple\n    dst: tuple\n\n    example: print(scale(99, (0.0, 99.0), (-1.0, +1.0)))\n    \"\"\"\n    return (float(val - src[0]) / (src[1] - src[0])) * (dst[1] - dst[0]) + dst[0]\n\n\n# Open the Gamepad event file:\n# /dev/input/event3 is for PS3 gamepad\n# /dev/input/event4 is for PS4 gamepad\n# look at contents of /proc/bus/input/devices if either one of them doesn't work.\n# use 'cat /proc/bus/input/devices' and look for the event file.\ninfile_path = \"/dev/input/event4\"\n\n# open file in binary mode\nin_file = open(infile_path, \"rb\")\n\n# Read from the file\n# long int, long int, unsigned short, unsigned short, unsigned int\nFORMAT = 'llHHI'    \nEVENT_SIZE = struct.calcsize(FORMAT)\nevent = in_file.read(EVENT_SIZE)\n\nwhile event:\n    (tv_sec, tv_usec, ev_type, code, value) = struct.unpack(FORMAT, event)\n\n    if ev_type == 1: # A button was pressed or released.\n        if code == 310 and value == 0:\n            steer_motor.reset_angle(steer_motor.angle()-5)\n        if code == 311 and value == 0:\n            steer_motor.reset_angle(steer_motor.angle()+5)\n\n    elif ev_type == 3: # Stick was moved\n        if code == 0: \n            left = scale(value, (0,255), (40, -40))\n        if code == 4: # Righ stick vertical\n            forward = scale(value, (0,255), (100,-100))\n\n    # Set motor voltages. \n    left_motor.dc(forward)\n    right_motor.dc(forward)\n\n    # Track the steering angle\n    steer_motor.track_target(left)\n\n    # Finally, read another event\n    event = in_file.read(EVENT_SIZE)\n\nin_file.close()\n</code></pre>"},{"location":"IOT/Lego/EV3/#cad","title":"CAD :","text":"<ul> <li>https://grabcad.com/br.barry.parker-1/models ;</li> </ul>"},{"location":"IOT/QuickPi/","title":"QuickPi","text":"<ul> <li> <p>Pr\u00e9sentation de la carte QuickPi ;</p> </li> <li> <p>Site pr\u00e9sentant les parcours QuickPi ;</p> </li> <li> <p>Vid\u00e9o de prise en main de l'interface ;</p> </li> <li> <p>Bac \u00e0 sable de l'interface en Python ;</p> </li> <li> <p>Notebook :</p> <ul> <li>Quick_Pi-Objets_connectes-Parcours_1.ipynb </li> <li>Quick_Pi-Objets_connectes-Parcours_2.ipynb </li> </ul> </li> </ul>"},{"location":"IOT/RP2040/","title":"RP2040","text":""},{"location":"IOT/RP2040/#documentation-rp2040","title":"Documentation RP2040","text":"<p>https://www.raspberrypi.com/documentation/microcontrollers/rp2040.html </p>"},{"location":"IOT/RP2040/#pi-pico","title":"PI PICO","text":""},{"location":"IOT/RP2040/#tiny","title":"TINY","text":""},{"location":"IOT/RP2040/#autres-cartes-rp2040","title":"Autres cartes RP2040","text":"<p>https://www.tomshardware.com/best-picks/best-rp2040-boards</p>"},{"location":"IOT/RP2040/PICO/","title":"Pi Pico","text":""},{"location":"IOT/RP2040/PICO/#broches-pi-pico-w","title":"Broches Pi Pico W","text":""},{"location":"IOT/RP2040/PICO/#demarrage-en-micropython","title":"D\u00e9marrage en MicroPython","text":"<ul> <li>T\u00e9l\u00e9charger le firmeware adapt\u00e9 au Raspberry Pi Pico W (avec Wi-Fi et Bluetooth LE) : https://micropython.org/download/rp2-pico-w/rp2-pico-w-latest.uf2</li> <li>Maintenir appuy\u00e9 le bouton <code>BOOT</code> tout en connectant l'USB au PC ;</li> <li>Glisser/d\u00e9poser le fichier du firmware sur le lecteur <code>RPI-RP2 (E:)</code> ;</li> </ul> <p>Source</p>"},{"location":"IOT/RP2040/PICO/#avec-thonny","title":"Avec Thonny","text":"<ul> <li>D\u00e9marrer le logiciel <code>Thonny</code> puis cliquer dans le menu sur <code>Ex\u00e9cuter</code> pour choisir le bon interpr\u00e9teur et le port connect\u00e9 ;</li> </ul> <ul> <li>Enregistrer en <code>main.py</code> le code suivant pour tester la LED int\u00e9gr\u00e9e sur la Pi Pico W :</li> </ul> <pre><code># Blink en boucle infinie\nfrom machine import Pin\nfrom utime import sleep\n\npin = Pin(\"LED\", Pin.OUT) # \"LED\" d\u00e9signe la led built-in\n\nprint(\"LED starts flashing...\")\nwhile True:\n    try:\n        pin.toggle() # bascule d'un \u00e9tat \u00e0 l'autre\n        sleep(1) # pause de 1 seconde\n    except KeyboardInterrupt:\n        break\npin.off()\nprint(\"Finished.\")\n</code></pre> <p>Sp\u00e9cificit\u00e9 pour la LED embarqu\u00e9e sur la Pi Pico W cf 3.4. The on-board LED (page 16)</p> <p>Faire Ctrl\uff0bC pour provoquer une interruption clavier ou appuyer sur le bouton \"stop\" ;</p>"},{"location":"IOT/RP2040/PICO/#avec-vsc","title":"Avec VSC","text":"<p>Le plus pratique pour programmer en MicroPython une carte Pi Pico W avec Visual Studio Code est d'installer l'extension d\u00e9di\u00e9e MicroPico et d'en suivre les instructions...</p> <p></p>"},{"location":"IOT/RP2040/PICO/#extensions-necessaires","title":"Extensions n\u00e9cessaires","text":"<ul> <li>Python</li> <li>Pylance</li> <li>IntelliCode</li> </ul>"},{"location":"IOT/RP2040/PICO/#autres-solutions","title":"Autres solutions","text":"<ul> <li>micropython-stubs</li> <li>micropython-stubber</li> </ul>"},{"location":"IOT/RP2040/PICO/#module-picozero","title":"Module picozero","text":"<ul> <li> <p>picozero_._readthedocs</p> </li> <li> <p>Tutoriels projets Raspberry Pi Pico</p> </li> </ul>"},{"location":"IOT/RP2040/PICO/#ressources","title":"Ressources","text":"<ul> <li>MicroPython - Quick reference for the RP2</li> <li>Raspberry Pi Pico Python SDK</li> <li>Connecting to the Internet with Raspberry Pi Pico W</li> </ul> <p> <p></p> <p> <p></p> <p>raspberry pi pico programmer RTC + ntp (wifi) en python</p>"},{"location":"IOT/RP2040/PICO/#exemples-dapplications","title":"Exemples d'applications","text":""},{"location":"IOT/RP2040/PICO/#callback","title":"Callback","text":"<pre><code># Blink avec callback\nfrom machine import Pin, Timer\n\nled = Pin(\"LED\", Pin.OUT) # \"LED\" d\u00e9signe la led built-in\ntimer = Timer() # Cr\u00e9\u00e9 une instance de Timer()\n\ndef blink(timer) :\n    led.toggle()\n\ntimer.init(freq=2.5, mode=Timer.PERIODIC, callback=blink)\n</code></pre> <p>On observe que la LED clignote mais la carte reste disponible pour d'autres instructions</p>"},{"location":"IOT/RP2040/PICO/#real-time-clock","title":"Real Time Clock","text":"<p>Avec la classe machine.RTC de MicroPython, il est possible d'utiliser l'horloge temps r\u00e9el interne du Raspberry Pi Pico afin de conna\u00eetre la date et l'heure \u00e0 tout instant.</p>"},{"location":"IOT/RP2040/PICO/#recuperer-les-informations-de-lhorloge","title":"R\u00e9cup\u00e9rer les informations de l'horloge","text":"<pre><code># Obtenir la date et l'heure du \u00b5C\nfrom machine import RTC\nfrom utime import sleep\n\nrtc = RTC()  # cr\u00e9ation d'un objet de type \"Real Time Clock\"\n\nwhile True:\n\n    t = rtc.datetime()   # obtention de la date et l'heure\n\n    # Affichage au format tuple (year, month, day, weekday, hours, minutes, seconds, subseconds)\n    print(t)\n    # Affichage reformat\u00e9\n    jours = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\", \"dimanche\"]\n    print(f\"Pour le \u00b5C nous sommes maintenant le {jours[t[3]]} {t[2]}/{t[1]}/{t[0]} et il est {t[4]}h{t[5]}min{t[6]}s\" )  \n\n    if t[0] == 2021 :\n        print(\"(L'horloge n'est pas r\u00e9gl\u00e9e !)\")\n\n    print()    \n    sleep(1) # mise \u00e0 jour chaque seconde\n</code></pre>"},{"location":"IOT/RP2040/PICO/#regler-lhorloge","title":"R\u00e9gler l'horloge","text":"<p>L'horloge interne du Raspberry Pi Pico red\u00e9marre \u00e0 la date du <code>vendredi 01/01/2021 \u00e0 0h0min0s</code> d\u00e8s qu'on le r\u00e9alimente. Le script suivant permet \u00e0 l'utilisateur de r\u00e9gler l'horloge manuellement :</p> <pre><code># R\u00e9gler la date et l'heure du \u00b5C\nfrom machine import RTC\nfrom utime import sleep\n\nrtc = RTC()\n\nprint(\"R\u00e9glage manuel de la date et de l'heure\")\nannee = int(input (\"Ann\u00e9e (4 chiffres) : \"))\nmois = int(input (\"Mois (1-12) : \"))\njour = int(input(\"Jour (1-31) : \"))\nheure = int(input(\"Heure (0-23) : \"))\nminute = int(input(\"Minute (0-59) : \"))\nseconde = int(input(\"Seconde (0-59) : \"))\n\n# r\u00e9glage de l'heure\nrtc.datetime((annee, mois, jour, 0, heure, minute, seconde, 0))\n\nwhile True:\n\n    t = rtc.datetime()   # obtention de la date et l'heure\n\n    # Affichage au format tuple (year, month, day, weekday, hours, minutes, seconds, subseconds)\n    print(t)\n    # Affichage reformat\u00e9\n    jours = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\", \"dimanche\"]\n    print(f\"Pour le \u00b5C nous sommes maintenant le {jours[t[3]]} {t[2]}/{t[1]}/{t[0]} et il est {t[4]}h{t[5]}min{t[6]}s\" )\n\n    sleep(1) # mise \u00e0 jour chaque seconde\n</code></pre> <p>Thonny met \u00e0 jour la date et l'heure du \u00b5C automatiquement...</p> <p>https://electroniqueamateur.blogspot.com/2021/08/connaitre-la-date-et-lheure-avec-un.html</p> <p>https://electroniqueamateur.blogspot.com/2021/08/horloge-temps-reel-ds3231-et-raspberry.html</p> <p> </p> <p>https://micropython-urtc.readthedocs.io/en/latest/install.html https://github.com/adafruit/Adafruit-uRTC</p> <p>Ou https://github.com/balance19/micropython_DS3231  --&gt;</p> <pre><code>\n</code></pre> <pre><code>import time\nfrom machine import Pin\nfrom picozero import pico_led\n\nrelais_1 = Pin(18, Pin.OUT)    # create output pin on GPIO18\n\nwhile True :\n    pico_led.on()\n    time.sleep(1)\n    pico_led.off()\n    relais_1.on()                 # set pin to \"on\" (high) level\n    time.sleep(1)           # sleep for 1 second\n    relais_1.off()                # set pin to \"off\" (low) level\n    time.sleep(1)           # sleep for 1 second\n\n\nimport time\nfrom machine import Pin\n\nLED = Pin(\"LED\", Pin.OUT)    # create output pin on GPIO25 the built-in LED\n\nwhile True :\n    LED.on()                # set pin to \"on\" (high) level\n    time.sleep(1)           # sleep for 1 second\n    LED.off()               # set pin to \"off\" (low) level\n    time.sleep(1)           # sleep for 1 second\n\n\nimport time\nfrom picozero import pico_led\n\nwhile True :\n    pico_led.on()\n    time.sleep(1)\n    pico_led.off()\n    time.sleep(1)\n</code></pre> <pre><code># Serveur couronne de l'Avent\nimport network\nimport socket\nfrom time import sleep\nimport machine\nimport codes_wlan\nfrom picozero import pico_temp_sensor\n\n# Gestion de l'horloge\nimport ntptime # Network Time Protocol\nrtc = machine.RTC()\n\n\nssid = codes_wlan.ssid\npassword = codes_wlan.password\n\n\nled = machine.Pin(\"LED\", machine.Pin.OUT) # \"LED\" d\u00e9signe la led built-in\nrelais = machine.Pin(18, machine.Pin.OUT)\n\n\ndef connect():\n    # Connexion au WLAN\n    wlan = network.WLAN(network.STA_IF)\n    wlan.active(True)\n    wlan.config(pm=0xa11140) # Pour augmenter la puissance du signal si besoin\n    wlan.connect(ssid, password)\n    while wlan.isconnected() == False:\n        print('Waiting for connection...')\n        sleep(1)\n    print(wlan.ifconfig())\n    ip = wlan.ifconfig()[0]\n    print(f\"Pi Pico W connect\u00e9e \u00e0 l'adresse IP : {ip}\")\n    return ip\n\ndef open_socket(ip):\n    # Ouvrir un socket\n    address = (ip, 80)\n    connexion = socket.socket()\n    connexion.bind(address)\n    connexion.listen(1)\n    return connexion\n\ndef webpage(temperature, etat_led, etat_relais):\n    #Template HTML\n    html = f\"\"\"\n            &lt;!DOCTYPE html&gt;\n            &lt;html lang=\"fr\"&gt;\n            &lt;head&gt;\n                &lt;meta charset=\"UTF-8\"&gt;\n                &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n                &lt;title&gt;Pi Pico W&lt;/title&gt;\n            &lt;/head&gt;\n            &lt;body&gt;            \n            &lt;form action=\"./led-on\"&gt;\n            &lt;input type=\"submit\" value=\"Allumer la LED\" /&gt;\n            &lt;/form&gt;\n            &lt;form action=\"./led-off\"&gt;\n            &lt;input type=\"submit\" value=\"Eteindre la LED\" /&gt;\n            &lt;/form&gt;\n            &lt;p&gt;La LED est {etat_led}&lt;/p&gt;\n            &lt;form action=\"./relais-on\"&gt;\n            &lt;input type=\"submit\" value=\"Allumer le relais\" /&gt;\n            &lt;/form&gt;\n            &lt;form action=\"./relais-off\"&gt;\n            &lt;input type=\"submit\" value=\"Eteindre le relais\" /&gt;\n            &lt;/form&gt;\n            &lt;p&gt;Le relais est {etat_relais}&lt;/p&gt;\n            &lt;p&gt;La temp\u00e9rature est de {temperature} \u00b0C&lt;/p&gt;\n            &lt;/body&gt;\n            &lt;/html&gt;\n            \"\"\"\n    return str(html)\n\ndef serveur(connexion, dt):\n    #Start a web server\n    etat_led = 'OFF'\n    led.off()\n    etat_relais = 'OFF'\n    relais.off()\n    temperature = 0\n    while True:\n        client = connexion.accept()[0]\n        requete = client.recv(1024)\n        requete = str(requete)\n        try:\n            requete = requete.split()[1]\n        except IndexError:\n            pass\n        if requete == '/led-on?':\n            led.on()\n            etat_led = 'ON'\n        elif requete =='/led-off?':\n            led.off()\n            etat_led = 'OFF'\n        if requete == '/relais-on?':\n            relais.on()\n            etat_relais = 'ON'\n        elif requete =='/relais-off?':\n            relais.off()\n            etat_relais = 'OFF'\n        temperature = pico_temp_sensor.temp\n        print(requete)\n        html = webpage(temperature, etat_led, etat_relais)\n        client.send(html)\n        client.close()\n\n\ntry:\n    # Connexion au WLAN\n    ip = connect()\n    # R\u00e9glage de l'horloge\n    ntptime.settime() # R\u00e9glage de l'horloge \u00e0 l'heure UTC obtenu d'internet (protocole NTP)\n    t = rtc.datetime() # Tuple (year, month, day, weekday, hours, minutes, seconds, subseconds)\n    print(f\"RTC du RP2040 \u00e0 l'heure UTC : {t}\")\n    # R\u00e9glage de l'horloge \u00e0 l'heure de Paris\n    saison = \"\u00e9t\u00e9\" if 3&lt;t[1]&lt;11 else \"hiver\"\n    decalage = 2 if 3&lt;t[1]&lt;11 else 1 # 1h en hiver, 2h en \u00e9t\u00e9\n    dt = rtc.datetime((t[0], t[1], t[2], t[3], t[4] + decalage, t[5], t[6], t[7]))\n    print(f\"RTC du RP2040 \u00e0 l'heure d'{saison}) : {dt}\")\n    # D\u00e9marrage du serveur\n    connexion = open_socket(ip)\n    serveur(connexion, dt)\n\nexcept KeyboardInterrupt:\n    machine.reset()\n</code></pre>"},{"location":"IOT/RP2040/TINY/","title":"Index","text":""},{"location":"IOT/RP2040/TINY/#tiny2040","title":"TINY2040","text":"<p>Source Pimoroni</p> <p> <p></p>"},{"location":"IOT/RP2040/TINY/#demarrage-en-micropython","title":"D\u00e9marrage en MicroPython","text":"<ul> <li>T\u00e9l\u00e9charger le firmeware adapt\u00e9 : https://micropython.org/download/PIMORONI_TINY2040/</li> <li>Maintenir appuy\u00e9 le bouton <code>BOOT</code> tout en connectant l'USB au PC ;</li> <li>Glisser/d\u00e9poser le fichier du firmware sur le lecteur <code>RPI-RP2 (E:)</code> ;</li> </ul> <p>Source</p> <ul> <li>D\u00e9marrer le logiciel <code>Thonny</code> puis cliquer dans le menu sur <code>Ex\u00e9cuter</code> pour choisir le bon interpr\u00e9teur et le port connect\u00e9 ;</li> </ul> <p></p> <ul> <li>Enregistrer en <code>main.py</code> le code suivant pour tester la LED RGB :</li> </ul> <pre><code># Tiny 2040 RBG LED control\n# Tony Goodhew 11th March 2021\n\nimport utime\nfrom machine import Pin, PWM\n\n#Setup RGB LED\n# Construct PWM objects with RGB LED\nrpwm = PWM(Pin(18)) # RED\ngpwm = PWM(Pin(19)) # GREEN\nbpwm = PWM(Pin(20)) # BLUE\n# Set the PWM frequency.\nrpwm.freq(1000)\ngpwm.freq(1000)\nbpwm.freq(1000)\n# Turn off\nrduty = 65535\ngduty = 65535\nbduty = 65535\nrpwm.duty_u16(rduty)\ngpwm.duty_u16(gduty)\nbpwm.duty_u16(bduty)\n\ndef LED(r,g,b):\n    rduty = int(65535 -(65535 * r/255))\n    gduty = int(65535 -(65535 * g/255))\n    bduty = int(65535 -(65535 * b/255))\n#    print(rduty)\n#    print(gduty)\n#    print(bduty)\n    rpwm.duty_u16(rduty)\n    gpwm.duty_u16(gduty)\n    bpwm.duty_u16(bduty)\n\nLED(255,255,255)\nutime.sleep(0.3)\nLED(255,0,0)\nutime.sleep(0.3)\n# Blink\nfor i in range(4):\n    LED(0,0,255)\n    utime.sleep(0.3)\n    LED(0,0,0)\n    utime.sleep(0.3)\n# Fade UP\nfor i in range(255):\n    LED(i,i,0)\n    utime.sleep(0.01)\n# Fade DOWN\nfor ii in range(255,-1,-1):\n    LED(ii,ii,0)\n    utime.sleep(0.01)\n</code></pre> <p>Source</p>"},{"location":"IOT/RP2040/TINY/#minibot","title":"MiniBot","text":"<p>Source : SMARS MINI</p>"},{"location":"IOT/RP2040/TINY/#composants","title":"Composants :","text":"<ul> <li> <p>Mini L298N ;</p> </li> <li> <p>GY-530 VL53L0X le plus petit capteur de t\u00e9l\u00e9m\u00e9trie laser Time-o f-flight (ToF) au monde</p> </li> <li> <p>Mini moteur \u00e0 engrenages</p> </li> </ul>"},{"location":"MATOS/DMX/Lyre_iMove_5S/DR6_TP_DMX/","title":"DR6 TP DMX","text":"<p>D\u00e9placer les faders et observer le comportement des diff\u00e9rents \u00e9quipements afin de compl\u00e9ter le tableau des canaux affect\u00e9s \u00e0 la lyre.</p> <p> </p> <p>Relever sur l'oscillogramme suivant la valeur binaire transmise par le canal 1. Calculer, en degr\u00e9s, la valeur de l\u2019angle du PAN correspondant \u00e0 la valeur transmise sur le canal 1.</p> <p> </p> <p>Identifier le \u00ab Break \u00bb, le \u00ab Mark After Break \u00bb et le \u00ab Start Code \u00bb de cette trame.</p> <p></p>"},{"location":"MATOS/Quincy/","title":"Index","text":""},{"location":"MATOS/Quincy/#robot-dessinateur-quincy","title":"Robot dessinateur Quincy","text":""},{"location":"MATOS/Quincy/#hack-danykeynl","title":"Hack d'AnykeyNL","text":"<ul> <li>d\u00e9pot sur GitHub</li> <li>forum sur reddit</li> <li>sur Instagram</li> </ul>"},{"location":"MATOS/STEMlab_125/","title":"RedPitaya","text":"<p>Ces cartes se pr\u00e9sentent comme les couteaux Suisse du test, de la mesure et du contr\u00f4le de signaux rapides. Elles permettent de remplacer de nombreux instruments de laboratoire on\u00e9reux et tout ceci de mani\u00e8re tr\u00e8s simple gr\u00e2ce \u00e0 une biblioth\u00e8que d\u2019applications open source en ligne.</p> <p>Les RedPitaya sont des cartes de d\u00e9veloppement comme Arduino ou Raspberry Pi, o\u00f9 les possibilit\u00e9s sont infinies. La particularit\u00e9 de celles-ci est la capacit\u00e9 de g\u00e9rer des signaux rapides jusqu\u2019\u00e0 50Mhz.</p>"},{"location":"MATOS/STEMlab_125/#architecture-des-stemlab","title":"Architecture des STEMlab","text":"<p>La carte est bas\u00e9e sur un syst\u00e8me sur puce SOC \u2014 FPGA de la gamme Xilinx Zynq qui permet de combiner la capacit\u00e9 de programmation d\u2019un c\u0153ur ARM Cortex-A9 \u00e0 double c\u0153ur (LINUX embarqu\u00e9) et les capacit\u00e9s mat\u00e9rielles d\u2019un FPGA permettent de fournir un syst\u00e8me d\u2019une performance in\u00e9gal\u00e9e.</p> <p>L\u2019instrument est \u00e9quip\u00e9 de deux entr\u00e9es et deux sorties analogiques RF (125 MS/s). Diff\u00e9rentes r\u00e9solutions sont propos\u00e9s (10,14 ou 16 bits), quatre entr\u00e9es et quatre sorties analogiques (100 kS/s), ainsi que de 16 ports entr\u00e9s/sorties logiques universels. Cot\u00e9 connectivit\u00e9, nous pouvons compter sur un port ETHERNET 1 Gbit, un port USB 2.0 et autre protocoles (I2C, SPI, UART), le tout peut \u00eatre autonome gr\u00e2ce \u00e0 la carte SD.</p> <p>Pour le soft la carte est bas\u00e9e sur le syst\u00e8me d\u2019exploitation GNU/Linux. elle peut \u00eatre programm\u00e9e avec diff\u00e9rents niveaux avec une vari\u00e9t\u00e9 d\u2019interfaces logicielles, les langages de programmation sont : HDL/Verilog, C/C++, Python/Jupyter, et un serveur web int\u00e9gr\u00e9 (NGINX) pour des interfaces web bas\u00e9es sur HTML/JavaScript.</p>"},{"location":"MATOS/STEMlab_125/#specifications-des-stemlab-125-10-vs-125-14","title":"Sp\u00e9cifications des STEMlab 125-10 vs 125-14","text":"<ul> <li> <p>La STEMlab 125-14 (\u00e0 l'origine la redpitaya V1.1) a un CAN de r\u00e9solution 14bits et poss\u00e8de deux ports microUSB : l'alimentation 5V-2A(minimum) se branche sur celui le plus \u00e0 l'ext\u00e9rieur.  Pour que l'analyseur logique fonctionne, les signaux d'entr\u00e9es doivent pr\u00e9alablement \u00eatre invers\u00e9s (montage porte NON avec un transistor NPN par exemple) avant d'\u00eatre raccord\u00e9s au connecteur E1 sur <code>DI00_P</code> \u00e0 <code>DI07_P</code> sans oublier le <code>GND</code>.</p> </li> <li> <p>La STEMlab 125-10 a un CAN de r\u00e9solution 10bits et ne poss\u00e8de qu'un seul port microUSB pour l'alimentation 5V-2A(minimum).  La nappe des fils de l'analyseur logique se branche directement sur le connecteur E1 \u00e0 l'endroit rep\u00e9r\u00e9 <code>logic analyser</code> sur la carte avec le fil noir en face de la marque <code>GND</code>.</p> </li> </ul> <p> </p>"},{"location":"MATOS/STEMlab_125/#mise-en-route","title":"Mise en route","text":"<ul> <li>Alimenter un routeur du labo ;</li> <li>Raccorder le c\u00e2ble ethernet de la RedPitaya au switch de ce routeur ;</li> <li>Alimenter la RedPitaya sous 5V-2A(minimum) ; <p>Au bout du d\u00e9marrage, les LEDs bleu et verte sont allum\u00e9es et la rouge clignote, alors, la RedPitaya a normalement obtenu l'IP <code>192.168.n.100</code> avec <code>n</code> le num\u00e9ro du routeur ;</p> </li> <li>Connecter alors un PC au LAN et/ou votre iPad au WLAN de ce routeur ;</li> <li>Dans un navigateur Chrome, saisir l'IP de la RedPitaya ; <p>L'interface Web des applications de la RedPitaya s'affiche alors...</p> </li> </ul>"},{"location":"MATOS/STEMlab_125/#ressources","title":"Ressources","text":"<ul> <li>Documentation</li> <li>GitHub RedPitaya</li> <li>ScieTech.fr</li> </ul>"},{"location":"SIMU_%CE%A6/","title":"Index","text":"<ul> <li>OpenModelica</li> <li> <p>SCILAB-XCOS</p> </li> <li> <p>PyGgb = Geogebra + Python</p> </li> <li> <p>Electronic circuit simulator de Paul Falstad</p> </li> </ul>"},{"location":"SIMU_%CE%A6/OpenModelica/","title":"Index","text":""},{"location":"SIMU_%CE%A6/OpenModelica/#ressources","title":"Ressources","text":"OpenModelica - Partie 1 : g\u00e9n\u00e9ralit\u00e9s <ul> <li> <p>prise-en-main-openmodelica</p> </li> <li> <p>CREA https://sciences-ingenieur.com</p> </li> <li>http://sciences-ingenieur.com/index.php/2019/01/31/modelisation-thermique/</li> </ul> <p>Site de profs </p> <ul> <li> <p>Espace d\u00e9di\u00e9 \u00e0 la Mod\u00e9lisation Multiphysique</p> </li> <li> <p>https://sti2dwallis.wordpress.com</p> </li> <li>https://sti2dwallis.wordpress.com/?s=open+modelica</li> </ul>"},{"location":"SIMU_%CE%A6/PyGgb/","title":"Index","text":"<ul> <li> <p>https://geogebra.org/python/index.html</p> <ul> <li>https://tice-c2i.apps.math.cnrs.fr/2023/10/21/pyggb/</li> <li>http://revue.sesamath.net/spip.php?article1601</li> <li>http://revue.sesamath.net/spip.php?article1620</li> <li>https://mathematiques.ac-normandie.fr/Combiner-GeoGebra-et-Python</li> <li>https://www.reddit.com/r/pyggb/</li> <li>https://github.com/othoni-hub/PythonGgb</li> <li> <p>https://www.geogebra.org/u/dric</p> </li> <li> <p>https://geogebra.org/python/index.html?name=toto&amp;code=eJxVjssOgjAQRff9ihtWkIxG8RFj4gJ16cI%2FIAQKjMGWlBJ%2FX0oRtatmztxzJwgCcWMlYWuj%2B6qGfWm0mpXthLjKckTziJCpArlWnTV9boeQRONWHgNmVbnBcymcVJTagMEKJlOVDPcRjgLDG01pghPu7hcyIY5%2ByHkmG8LWk8JotjJNHHPXhpOEPhm%2F5kvbb%2BliRweK%2F5pne0srn7qwyZtJSetIvAEe41GS</p> </li> </ul> </li> </ul> <pre><code>p=Polygon((A,B,C)) #A, B et C sont des points\np=Polygon([A,B,C])\np=Polygon(A,B,5) #pentagone r\u00e9gulier\nSegment(A,B)\nVector(A,B)\nLine(A,B)\nLine(a,b) #coeff directeur et ordonn\u00e9e \u00e0 l\u2019origine\nCircle(A, 3) #centre et rayon\nCircle(A, 3,color=\u2019green\u2019,line_thickness=10)\nEllipse(A,B,2)\nParabola(a, b, c) # trace la parabole d\u2019\u00e9quation y=ax\u00b2+bx+c\nVector(B, C)\nD = Rotate(A, pi/6).with_properties(color=\u2019green\u2019)\n\u2003\u2003 # le centre de la rotation est l\u2019origine\n\u2003\u2003 # pi doit \u00eatre import\u00e9 de la biblioth\u00e8que math\n\u2003\u2003 # with_properties() permet de modifier les attributs du point\nIntersect(parabola, line,2) # 2 objets ggb et le n\u00b0 pt intersection\nz = complex(2, -4)\nabs(z) # argument de z\na=Slider(0, 4, increment=0.1)\nDistance(A,B)\n</code></pre>"},{"location":"SIMU_%CE%A6/SCILAB-XCOS/","title":"Index","text":"<p>PB installation SIMM avec 2024-2025 Solution avec scilab 5.5.2 : https://www.developpez.net/forums/i2170280/environnements-developpement/autres-edi/scilab/probleme-daffichage-courbes-scope/</p> <p>Auteur : PascalPLC Proc\u00e9dure d'installation de SCILAB 5.5.2 Bonjour,</p> <p>L'utilisation de SIMM ou de COSELICA peut s'av\u00e8rer capricieuse avec les versions r\u00e9centes de SCILAB. Par contre, \u00e7a marche tr\u00e8s bien avec SCILAB 5.5.2 en version 32 bits.</p> <p>Si \u00e7a peut aider, voici la proc\u00e9dure d'installation de SCILAb 5.5.2 avec les modules iodelay, CPGE, Coselica, SIMM et mingw.</p> <p>C'est important d'installer les versions 32 bits de SCILAb et de gcc, y compris dans un environnement 64 bits, sinon, \u00e7a ne fonctionnera pas.</p> <p>Pour l'installation des modules, on utilise le gestionnaire de modules ATOMS, et pour gcc, le lien est le suivant : http://atoms.scilab.org/toolboxes/mi...c-4.6.3-32.exe</p> <ol> <li>Installer SCILAB 5.5.2 32 bits</li> <li>Installer ensuite les 4 modules suivants : \u2022 Iodelay \u2022 CPGE \u2022 Coselica \u2022 SIMM</li> <li>Relancer SCILAB afin de v\u00e9rifier que l\u2019installation des 4 modules est r\u00e9ussie</li> <li>Quitter SCILAB</li> <li>T\u00e9l\u00e9charger et installer la version 32 bits de gcc : gcc-4.6.3-32.exe</li> <li>Important : L\u2019installer dans le r\u00e9pertoire C:\\Users\\user o\u00f9 user est votre espace utilisateur de Windows</li> <li>Red\u00e9marrer le PC pour que Windows prenne en compte le compilateur</li> <li>Installer le module MingW dans SCILAB sans pr\u00e9caution particuli\u00e8re. Attention, un message d\u2019erreur peut appara\u00eetre \u00e0 la fin de l\u2019installation de MingW. Ignorez-le.</li> <li>Relancer SCILAB et la compilation des librairies de MingW va d\u00e9marrer. Cela prend plusieurs minutes. Patientez jusqu\u2019\u00e0 la fin.</li> <li>Relancer SCILAB.</li> <li>Enjoy CPGE, COSELICA et SIMM</li> </ol> <p>Voici \u00e0 titre d'exemple la simulation d'un circuit RLC s\u00e9rie excit\u00e9 par un \u00e9chelon unitaire (R = 1.5ohm, L = 1H, C = 1F).</p> <p> </p> <p>Et voici les r\u00e9sultats de simulation du moteur CC avec charge :</p> <p> </p>"},{"location":"SIMU_%CE%A6/SCILAB-XCOS/#ressources","title":"Ressources","text":"<p>Site de profs </p> <ul> <li> <p>Espace d\u00e9di\u00e9 \u00e0 la Mod\u00e9lisation Multiphysique</p> </li> <li> <p>https://scilab.developpez.com/tutoriels/debuter/apprendre-xcos-debutant/</p> </li> <li>https://scilab.developpez.com/tutoriels/apprendre-xcos/</li> </ul> <p>https://fossee.in/</p>"},{"location":"SIMU_%CE%A6/itemis_CREATE/","title":"Index","text":"<p>Maintenant, <code>YAKINDU Statechart Tools</code> se nomme <code>itemis CREATE</code></p> <p>Documentation</p> <p>Cloud editor</p> <p>Quick Reference</p> <p>Example library</p>"},{"location":"SOFT/skills/","title":"Les softs skills","text":""},{"location":"SOFT/skills/#des-competences-pour-savoir-faire-et-savoir-etre","title":"Des comp\u00e9tences pour savoir-faire et savoir-\u00eatre","text":"<p>Si les mati\u00e8res li\u00e9es au d\u00e9veloppement du num\u00e9rique seront n\u00e9cessaires pour s\u2019ins\u00e9rer dans la vie active, d\u2019autres comp\u00e9tences du XXI\u00e8me si\u00e8cle relevant (notamment) des softs skills seront incontournables.</p> <p>Le savoir-faire sera aussi appr\u00e9ci\u00e9 sur le march\u00e9 du travail que le savoir-\u00eatre. Travailler en autonomie, cocr\u00e9er, savoir faire preuve d\u2019empathie, g\u00e9rer son temps et son stress fait partie des 10 softs skills d\u00e9j\u00e0 utiles aux \u00e9l\u00e8ves. Si elles sont pratiques pour les aider \u00e0 \u00e9voluer aujourd\u2019hui en classe, elles seront \u00e9galement essentielles pour vivre dans les ann\u00e9es \u00e0 venir.</p>"},{"location":"SOFT/skills/#elements-danalyse-transactionnelle","title":"El\u00e9ments d'analyse transactionnelle","text":""}]}